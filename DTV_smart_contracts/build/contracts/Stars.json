{
  "contractName": "Stars",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addAdmin(bytes32,address)\":{\"details\":\"Create and ading new role.\",\"params\":{\"account\":\"account for adding to the role.\",\"role\":\"role account.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"finalize()\":{\"details\":\"block adding admins.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"amount\":\"The amount of tokens to mint.\",\"to\":\"The address that will receive the minted tokens.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Stars.sol\":\"Stars\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/GSN/Context.sol\":{\"keccak256\":\"0x24e53395fee93f162fd823922bcddc3bfee51ef227ef25128ea384d7b1aa8d3f\",\"urls\":[\"bzz-raw://f2a5bc8b6e1abd82d225e625a043db29de4fd9d82acee7ab8a2386f15bcbd10b\",\"dweb:/ipfs/QmaemrdcPM7QNpdzWb1cVD5ZAmo3E1C82xQQexc8RtLrq9\"]},\"project:/contracts/Stars.sol\":{\"keccak256\":\"0x581734a607b6d737fa77ef3b9c79be6cca7479ed91eeebbb7dac1107000561b6\",\"urls\":[\"bzz-raw://33461369d97ba6dbfa2df40e1155a53a4ba96809788818ecb722469acb4523f3\",\"dweb:/ipfs/QmW1LA84AAXW61pZ9scsG8stz6wA1T2pb3kHCsu1y9KrsR\"]},\"project:/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc432e2b1ae0cfb66f539ae232ae2d9c38427543b38d84543ff995d7f0a070615\",\"urls\":[\"bzz-raw://ce72cf19f702a2c0b0d779aee381e27ae0f6ef1e2f8cbca2c4f5c70738bd7d1b\",\"dweb:/ipfs/QmaeBt2tKm4TyNq5XGWPouJtniSUJ4YVLfQDpVS4YWDL1Y\"]},\"project:/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xfce2091bc16c26c16c2a66e2251adcc3473effeb24db772adde01d3a767a92c5\",\"urls\":[\"bzz-raw://519a82f248a58a8334d23c880b5922c23632f9f2f6dcbfaddb888a7b8ca673ce\",\"dweb:/ipfs/QmfTV2zywibbCU7eDzgStXu4A4RC43b5qL1QXpwzyewBaP\"]},\"project:/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa36a7b370cc5fe4be6358cc8f8e5b236c9b8c5dc57dfc472a7f81400ba86099e\",\"urls\":[\"bzz-raw://7aa771ffe3d39d2b6c8b5db675520e50d88da1fbb211093a84cb063d9a4a628c\",\"dweb:/ipfs/QmSc1s2JC2qMct8wKBBGL4YrWi6xBXz8XxQDb6cvFiWzng\"]},\"project:/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84aff05fc85ef61fdfa395cfdbe5e10500b6883ed9f315b62615d706ccd71390\",\"urls\":[\"bzz-raw://65dd62fe156059f0d79961b4deefdc404c8178a6b07d5de23314a3574e42bf36\",\"dweb:/ipfs/QmVdTPB8togMU8DNYPEuyy3pwtvzS7czuU9PTKBQzAZQSL\"]},\"project:/contracts/token/Capped.sol\":{\"keccak256\":\"0x24f29dcf17f40db8050389ea0240557fc13eb05e0bdc057fe7adadf2357a03e9\",\"urls\":[\"bzz-raw://24a3b5a80631b7a1a15d388bffa46872a91a6f2dc100bd0854b06710900f06a9\",\"dweb:/ipfs/QmXrZusj2RAjF5Uif5HEWc9Te3Na3YVFz5hYpTZVJLkisi\"]},\"project:/contracts/token/Detailed.sol\":{\"keccak256\":\"0xc4d6d651f0e312be32b89676ccc646e7f802e371c8fc5310caf7158eef380e07\",\"urls\":[\"bzz-raw://a38715abc3f3b5f800c2ac8df87024e8ef84604ca70efc8c5f1fd3061bad37da\",\"dweb:/ipfs/QmXHeQ4wiRP8c5vTpLYnR7jfX6ULQg7phj8W8T37aiZhXr\"]},\"project:/contracts/token/ERC20.sol\":{\"keccak256\":\"0xea9b36e89a6ca93fe223d7e6dcff6853a2bdbd960f0830610753130df7e6669e\",\"urls\":[\"bzz-raw://c4030c71d0255c683ca5bd9cec503a7d520860a5fe6271688049a9cefd162c97\",\"dweb:/ipfs/QmW9kuDc2AjtLmNNdjyJd1bbA49C39GpCBwzNDP3vDrDvP\"]},\"project:/contracts/token/ERC20Mintable.sol\":{\"keccak256\":\"0x9abfdf67d5fc7412791401343fe1826302ead0493225a4e87f6d2d7315805c7e\",\"urls\":[\"bzz-raw://517cb66cb1333e4581acea72636184738526c14f6f05da46e1b4246e65f5560d\",\"dweb:/ipfs/QmcU6gRvzQRF7SDq1uzQYb29uXpqfT9VzHqGk5AjShkxLa\"]},\"project:/contracts/token/ERC20Pausable.sol\":{\"keccak256\":\"0xe957d507d925deca0957e2dd55aa73555f5bf676e23bd4621f2eb6ef2df3c026\",\"urls\":[\"bzz-raw://e341987c07d54fd55318d62cb4dd77e3f8de63dd6f89552598141dec35d09252\",\"dweb:/ipfs/QmZ74v43fX6dNUTgTKpcZyrVpzGFKp4NGFRQE14k3D4PTK\"]},\"project:/contracts/token/IERC20.sol\":{\"keccak256\":\"0x3643df6c1f960607f41a8617cbb0c0e036f65589ce4b2860e7d975bf8dabbec1\",\"urls\":[\"bzz-raw://26c639be3d90b25c193402e8a4b0fa64fe0812d4bbaee68db3a77271d0d081a3\",\"dweb:/ipfs/QmQRbHW1bC8qUvManw6M88BmK2kfbidz4TWwBnaxJVaxQM\"]},\"project:/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xe2a9ad9ddc0004c34fa5e59e0c70f9e5a61ff17a6419de0bc8745b31525c310b\",\"urls\":[\"bzz-raw://1ee2bcdb983c586b2bb8af4d4157e1136c25c3eebdcd3459ee729888afd0ba4c\",\"dweb:/ipfs/QmPwoNSZgd3L6ghCA1Rih58AJayF4FLMVS7mcySC6AikBN\"]},\"project:/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x83708c6452b75f9d1cecc141dadb87eb429aac2335f7327e6b6e83e71a058c79\",\"urls\":[\"bzz-raw://46bd7141b6c786f9b8fc852227350ac369a95b7417fd5ea028a89f83ea19bca1\",\"dweb:/ipfs/QmbETHXAGFWtm1NdwR2jsfq2cyUR2ckdxs8raw5pFA1WVe\"]}},\"version\":1}",
  "bytecode": "0x60806040526008805460ff60a01b191690553480156200001e57600080fd5b5060408051808201825260038082526253535360e81b6020808401828152855180870190965292855284015281516b033b2e3c9fd0803ce800000093916012916200006c91600091620001d4565b50815162000082906001906020850190620001d4565b506002805460ff90921660ff199283161790556006805490911690555060009050620000b66001600160e01b03620001ba16565b600880546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350604080516a4d494e5445525f524f4c4560a81b8152815190819003600b018120704d494e5445525f41444d494e5f524f4c4560781b825291519081900360110190206200015b91906001600160e01b03620001bf16565b60008111620001b1576040805162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a2063617020697320300000000000000000000000604482015290519081900360640190fd5b60095562000276565b335b90565b60009182526007602052604090912060020155565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200021757805160ff191683800117855562000247565b8280016001018555821562000247579182015b82811115620002475782518255916020019190600101906200022a565b506200025592915062000259565b5090565b620001bc91905b8082111562000255576000815560010162000260565b6118f180620002866000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636419bcdb11610104578063a217fddf116100a2578063d539139311610071578063d539139314610540578063d547741f14610548578063dd62ed3e14610574578063f2fde38b146105a2576101cf565b8063a217fddf146104c3578063a457c2d7146104cb578063a9059cbb146104f7578063ca15c87314610523576101cf565b80638da5cb5b116100de5780638da5cb5b146104485780639010d07c1461046c57806391d148541461048f57806395d89b41146104bb576101cf565b80636419bcdb146103ee57806370a082311461041a578063715018a614610440576101cf565b8063313ce56711610171578063395093511161014b578063395093511461038657806340c10f19146103b25780634bb278f3146103de5780635c975abb146103e6576101cf565b8063313ce56714610334578063355274ea1461035257806336568abe1461035a576101cf565b806318160ddd116101ad57806318160ddd146102ab57806323b872dd146102b3578063248a9ca3146102e95780632f2ff15d14610306576101cf565b806306fdde03146101d4578063095ea7b3146102515780631339324b14610291575b600080fd5b6101dc6105c8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102165781810151838201526020016101fe565b50505050905090810190601f1680156102435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027d6004803603604081101561026757600080fd5b506001600160a01b03813516906020013561065e565b604080519115158252519081900360200190f35b61029961067c565b60408051918252519081900360200190f35b6102996106a5565b61027d600480360360608110156102c957600080fd5b506001600160a01b038135811691602081013590911690604001356106ab565b610299600480360360208110156102ff57600080fd5b5035610719565b6103326004803603604081101561031c57600080fd5b50803590602001356001600160a01b031661072e565b005b61033c61079a565b6040805160ff9092168252519081900360200190f35b6102996107a3565b6103326004803603604081101561037057600080fd5b50803590602001356001600160a01b03166107a9565b61027d6004803603604081101561039c57600080fd5b506001600160a01b03813516906020013561080a565b61027d600480360360408110156103c857600080fd5b506001600160a01b03813516906020013561085e565b6103326108dc565b61027d6109d1565b61027d6004803603604081101561040457600080fd5b50803590602001356001600160a01b03166109da565b6102996004803603602081101561043057600080fd5b50356001600160a01b0316610a9d565b610332610ab8565b610450610b5a565b604080516001600160a01b039092168252519081900360200190f35b6104506004803603604081101561048257600080fd5b5080359060200135610b69565b61027d600480360360408110156104a557600080fd5b50803590602001356001600160a01b0316610b8e565b6101dc610bac565b610299610c0c565b61027d600480360360408110156104e157600080fd5b506001600160a01b038135169060200135610c11565b61027d6004803603604081101561050d57600080fd5b506001600160a01b038135169060200135610c7f565b6102996004803603602081101561053957600080fd5b5035610c9f565b610299610cb6565b6103326004803603604081101561055e57600080fd5b50803590602001356001600160a01b0316610cd9565b6102996004803603604081101561058a57600080fd5b506001600160a01b0381358116916020013516610d32565b610332600480360360208110156105b857600080fd5b50356001600160a01b0316610d5d565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106545780601f1061062957610100808354040283529160200191610654565b820191906000526020600020905b81548152906001019060200180831161063757829003601f168201915b5050505050905090565b600061067261066b610dc1565b8484610dc5565b5060015b92915050565b60408051704d494e5445525f41444d494e5f524f4c4560781b8152905190819003601101902081565b60055490565b60006106b8848484610eb1565b6106c3848484610f48565b61070f846106cf610dc1565b61070a856040518060600160405280602881526020016117ad602891396106fd8a6106f8610dc1565b610d32565b919063ffffffff6110b116565b610dc5565b5060019392505050565b60009081526007602052604090206002015490565b6000828152600760205260409020600201546107519061074c610dc1565b610b8e565b61078c5760405162461bcd60e51b815260040180806020018281038252602f8152602001806116b0602f913960400191505060405180910390fd5b6107968282611148565b5050565b60025460ff1690565b60095490565b6107b1610dc1565b6001600160a01b0316816001600160a01b0316146108005760405162461bcd60e51b815260040180806020018281038252602f815260200180611863602f913960400191505060405180910390fd5b61079682826111b7565b6000610672610817610dc1565b8461070a8560046000610828610dc1565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61122616565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b01902060009061088b9033610b8e565b6108c65760405162461bcd60e51b815260040180806020018281038252603081526020018061177d6030913960400191505060405180910390fd5b6108d260008484610eb1565b6106728383611280565b6108e4610dc1565b6008546001600160a01b03908116911614610934576040805162461bcd60e51b815260206004820181905260248201526000805160206117d5833981519152604482015290519081900360640190fd5b600854600160a01b900460ff1615610993576040805162461bcd60e51b815260206004820152601d60248201527f4d696e746572526f6c653a20616c72656164792066696e616c697a6564000000604482015290519081900360640190fd5b6008805460ff60a01b1916600160a01b1790556040517f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768190600090a1565b60065460ff1690565b60006109e4610dc1565b6008546001600160a01b03908116911614610a34576040805162461bcd60e51b815260206004820181905260248201526000805160206117d5833981519152604482015290519081900360640190fd5b600854600160a01b900460ff1615610a93576040805162461bcd60e51b815260206004820152601d60248201527f4d696e746572526f6c653a20616c72656164792066696e616c697a6564000000604482015290519081900360640190fd5b610672838361078c565b6001600160a01b031660009081526003602052604090205490565b610ac0610dc1565b6008546001600160a01b03908116911614610b10576040805162461bcd60e51b815260206004820181905260248201526000805160206117d5833981519152604482015290519081900360640190fd5b6008546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600880546001600160a01b0319169055565b6008546001600160a01b031690565b6000828152600760205260408120610b87908363ffffffff61137e16565b9392505050565b6000828152600760205260408120610b87908363ffffffff61138a16565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156106545780601f1061062957610100808354040283529160200191610654565b600081565b6000610672610c1e610dc1565b8461070a8560405180606001604052806025815260200161183e6025913960046000610c48610dc1565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6110b116565b6000610c8d6000848461139f565b610672610c98610dc1565b8484610f48565b6000818152600760205260408120610676906113ee565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b01902081565b600082815260076020526040902060020154610cf79061074c610dc1565b6108005760405162461bcd60e51b815260040180806020018281038252603081526020018061174d6030913960400191505060405180910390fd5b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610d65610dc1565b6008546001600160a01b03908116911614610db5576040805162461bcd60e51b815260206004820181905260248201526000805160206117d5833981519152604482015290519081900360640190fd5b610dbe816113f9565b50565b3390565b6001600160a01b038316610e0a5760405162461bcd60e51b815260040180806020018281038252602481526020018061181a6024913960400191505060405180910390fd5b6001600160a01b038216610e4f5760405162461bcd60e51b81526004018080602001828103825260228152602001806117056022913960400191505060405180910390fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b610ebc83838361149a565b610ec783838361149a565b6001600160a01b038316610f4357600954610ef082610ee46106a5565b9063ffffffff61122616565b1115610f43576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b505050565b6001600160a01b038316610f8d5760405162461bcd60e51b81526004018080602001828103825260258152602001806117f56025913960400191505060405180910390fd5b6001600160a01b038216610fd25760405162461bcd60e51b815260040180806020018281038252602381526020018061168d6023913960400191505060405180910390fd5b610fdd838383610eb1565b61102081604051806060016040528060268152602001611727602691396001600160a01b038616600090815260036020526040902054919063ffffffff6110b116565b6001600160a01b038085166000908152600360205260408082209390935590841681522054611055908263ffffffff61122616565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156111405760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111055781810151838201526020016110ed565b50505050905090810190601f1680156111325780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828152600760205260409020611166908263ffffffff6114b016565b1561079657611173610dc1565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526007602052604090206111d5908263ffffffff6114c516565b15610796576111e2610dc1565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600082820183811015610b87576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166112db576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6112e760008383610eb1565b6005546112fa908263ffffffff61122616565b6005556001600160a01b038216600090815260036020526040902054611326908263ffffffff61122616565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000610b8783836114da565b6000610b87836001600160a01b03841661153e565b6113aa838383610f43565b6113b26109d1565b15610f435760405162461bcd60e51b815260040180806020018281038252602a815260200180611892602a913960400191505060405180910390fd5b600061067682611556565b6001600160a01b03811661143e5760405162461bcd60e51b81526004018080602001828103825260268152602001806116df6026913960400191505060405180910390fd5b6008546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600880546001600160a01b0319166001600160a01b0392909216919091179055565b6114a583838361139f565b610f4383838361139f565b6000610b87836001600160a01b03841661155a565b6000610b87836001600160a01b0384166115a4565b8154600090821061151c5760405162461bcd60e51b815260040180806020018281038252602281526020018061166b6022913960400191505060405180910390fd5b82600001828154811061152b57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000611566838361153e565b61159c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610676565b506000610676565b6000818152600183016020526040812054801561166057835460001980830191908101906000908790839081106115d757fe5b90600052602060002001549050808760000184815481106115f457fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061162457fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610676565b600091505061067656fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220b8f55f42395742e1a0d6b4298048fccaf6ece3e60898fb536083511dbd21939364736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636419bcdb11610104578063a217fddf116100a2578063d539139311610071578063d539139314610540578063d547741f14610548578063dd62ed3e14610574578063f2fde38b146105a2576101cf565b8063a217fddf146104c3578063a457c2d7146104cb578063a9059cbb146104f7578063ca15c87314610523576101cf565b80638da5cb5b116100de5780638da5cb5b146104485780639010d07c1461046c57806391d148541461048f57806395d89b41146104bb576101cf565b80636419bcdb146103ee57806370a082311461041a578063715018a614610440576101cf565b8063313ce56711610171578063395093511161014b578063395093511461038657806340c10f19146103b25780634bb278f3146103de5780635c975abb146103e6576101cf565b8063313ce56714610334578063355274ea1461035257806336568abe1461035a576101cf565b806318160ddd116101ad57806318160ddd146102ab57806323b872dd146102b3578063248a9ca3146102e95780632f2ff15d14610306576101cf565b806306fdde03146101d4578063095ea7b3146102515780631339324b14610291575b600080fd5b6101dc6105c8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102165781810151838201526020016101fe565b50505050905090810190601f1680156102435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027d6004803603604081101561026757600080fd5b506001600160a01b03813516906020013561065e565b604080519115158252519081900360200190f35b61029961067c565b60408051918252519081900360200190f35b6102996106a5565b61027d600480360360608110156102c957600080fd5b506001600160a01b038135811691602081013590911690604001356106ab565b610299600480360360208110156102ff57600080fd5b5035610719565b6103326004803603604081101561031c57600080fd5b50803590602001356001600160a01b031661072e565b005b61033c61079a565b6040805160ff9092168252519081900360200190f35b6102996107a3565b6103326004803603604081101561037057600080fd5b50803590602001356001600160a01b03166107a9565b61027d6004803603604081101561039c57600080fd5b506001600160a01b03813516906020013561080a565b61027d600480360360408110156103c857600080fd5b506001600160a01b03813516906020013561085e565b6103326108dc565b61027d6109d1565b61027d6004803603604081101561040457600080fd5b50803590602001356001600160a01b03166109da565b6102996004803603602081101561043057600080fd5b50356001600160a01b0316610a9d565b610332610ab8565b610450610b5a565b604080516001600160a01b039092168252519081900360200190f35b6104506004803603604081101561048257600080fd5b5080359060200135610b69565b61027d600480360360408110156104a557600080fd5b50803590602001356001600160a01b0316610b8e565b6101dc610bac565b610299610c0c565b61027d600480360360408110156104e157600080fd5b506001600160a01b038135169060200135610c11565b61027d6004803603604081101561050d57600080fd5b506001600160a01b038135169060200135610c7f565b6102996004803603602081101561053957600080fd5b5035610c9f565b610299610cb6565b6103326004803603604081101561055e57600080fd5b50803590602001356001600160a01b0316610cd9565b6102996004803603604081101561058a57600080fd5b506001600160a01b0381358116916020013516610d32565b610332600480360360208110156105b857600080fd5b50356001600160a01b0316610d5d565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106545780601f1061062957610100808354040283529160200191610654565b820191906000526020600020905b81548152906001019060200180831161063757829003601f168201915b5050505050905090565b600061067261066b610dc1565b8484610dc5565b5060015b92915050565b60408051704d494e5445525f41444d494e5f524f4c4560781b8152905190819003601101902081565b60055490565b60006106b8848484610eb1565b6106c3848484610f48565b61070f846106cf610dc1565b61070a856040518060600160405280602881526020016117ad602891396106fd8a6106f8610dc1565b610d32565b919063ffffffff6110b116565b610dc5565b5060019392505050565b60009081526007602052604090206002015490565b6000828152600760205260409020600201546107519061074c610dc1565b610b8e565b61078c5760405162461bcd60e51b815260040180806020018281038252602f8152602001806116b0602f913960400191505060405180910390fd5b6107968282611148565b5050565b60025460ff1690565b60095490565b6107b1610dc1565b6001600160a01b0316816001600160a01b0316146108005760405162461bcd60e51b815260040180806020018281038252602f815260200180611863602f913960400191505060405180910390fd5b61079682826111b7565b6000610672610817610dc1565b8461070a8560046000610828610dc1565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61122616565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b01902060009061088b9033610b8e565b6108c65760405162461bcd60e51b815260040180806020018281038252603081526020018061177d6030913960400191505060405180910390fd5b6108d260008484610eb1565b6106728383611280565b6108e4610dc1565b6008546001600160a01b03908116911614610934576040805162461bcd60e51b815260206004820181905260248201526000805160206117d5833981519152604482015290519081900360640190fd5b600854600160a01b900460ff1615610993576040805162461bcd60e51b815260206004820152601d60248201527f4d696e746572526f6c653a20616c72656164792066696e616c697a6564000000604482015290519081900360640190fd5b6008805460ff60a01b1916600160a01b1790556040517f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768190600090a1565b60065460ff1690565b60006109e4610dc1565b6008546001600160a01b03908116911614610a34576040805162461bcd60e51b815260206004820181905260248201526000805160206117d5833981519152604482015290519081900360640190fd5b600854600160a01b900460ff1615610a93576040805162461bcd60e51b815260206004820152601d60248201527f4d696e746572526f6c653a20616c72656164792066696e616c697a6564000000604482015290519081900360640190fd5b610672838361078c565b6001600160a01b031660009081526003602052604090205490565b610ac0610dc1565b6008546001600160a01b03908116911614610b10576040805162461bcd60e51b815260206004820181905260248201526000805160206117d5833981519152604482015290519081900360640190fd5b6008546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600880546001600160a01b0319169055565b6008546001600160a01b031690565b6000828152600760205260408120610b87908363ffffffff61137e16565b9392505050565b6000828152600760205260408120610b87908363ffffffff61138a16565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156106545780601f1061062957610100808354040283529160200191610654565b600081565b6000610672610c1e610dc1565b8461070a8560405180606001604052806025815260200161183e6025913960046000610c48610dc1565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6110b116565b6000610c8d6000848461139f565b610672610c98610dc1565b8484610f48565b6000818152600760205260408120610676906113ee565b604080516a4d494e5445525f524f4c4560a81b8152905190819003600b01902081565b600082815260076020526040902060020154610cf79061074c610dc1565b6108005760405162461bcd60e51b815260040180806020018281038252603081526020018061174d6030913960400191505060405180910390fd5b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610d65610dc1565b6008546001600160a01b03908116911614610db5576040805162461bcd60e51b815260206004820181905260248201526000805160206117d5833981519152604482015290519081900360640190fd5b610dbe816113f9565b50565b3390565b6001600160a01b038316610e0a5760405162461bcd60e51b815260040180806020018281038252602481526020018061181a6024913960400191505060405180910390fd5b6001600160a01b038216610e4f5760405162461bcd60e51b81526004018080602001828103825260228152602001806117056022913960400191505060405180910390fd5b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b610ebc83838361149a565b610ec783838361149a565b6001600160a01b038316610f4357600954610ef082610ee46106a5565b9063ffffffff61122616565b1115610f43576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b505050565b6001600160a01b038316610f8d5760405162461bcd60e51b81526004018080602001828103825260258152602001806117f56025913960400191505060405180910390fd5b6001600160a01b038216610fd25760405162461bcd60e51b815260040180806020018281038252602381526020018061168d6023913960400191505060405180910390fd5b610fdd838383610eb1565b61102081604051806060016040528060268152602001611727602691396001600160a01b038616600090815260036020526040902054919063ffffffff6110b116565b6001600160a01b038085166000908152600360205260408082209390935590841681522054611055908263ffffffff61122616565b6001600160a01b0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156111405760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111055781810151838201526020016110ed565b50505050905090810190601f1680156111325780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828152600760205260409020611166908263ffffffff6114b016565b1561079657611173610dc1565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526007602052604090206111d5908263ffffffff6114c516565b15610796576111e2610dc1565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600082820183811015610b87576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166112db576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6112e760008383610eb1565b6005546112fa908263ffffffff61122616565b6005556001600160a01b038216600090815260036020526040902054611326908263ffffffff61122616565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000610b8783836114da565b6000610b87836001600160a01b03841661153e565b6113aa838383610f43565b6113b26109d1565b15610f435760405162461bcd60e51b815260040180806020018281038252602a815260200180611892602a913960400191505060405180910390fd5b600061067682611556565b6001600160a01b03811661143e5760405162461bcd60e51b81526004018080602001828103825260268152602001806116df6026913960400191505060405180910390fd5b6008546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600880546001600160a01b0319166001600160a01b0392909216919091179055565b6114a583838361139f565b610f4383838361139f565b6000610b87836001600160a01b03841661155a565b6000610b87836001600160a01b0384166115a4565b8154600090821061151c5760405162461bcd60e51b815260040180806020018281038252602281526020018061166b6022913960400191505060405180910390fd5b82600001828154811061152b57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b6000611566838361153e565b61159c57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610676565b506000610676565b6000818152600183016020526040812054801561166057835460001980830191908101906000908790839081106115d757fe5b90600052602060002001549050808760000184815481106115f457fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061162457fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610676565b600091505061067656fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220b8f55f42395742e1a0d6b4298048fccaf6ece3e60898fb536083511dbd21939364736f6c63430006000033",
  "sourceMap": "86:2124:3:-:0;;;297:31:7;;;-1:-1:-1;;;;297:31:7;;;342:99:3;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;385:4:3;;;;;;;;;;;;-1:-1:-1;;;385:4:3;;;;;;;391:6;;;;;;;;;;;;;;513:12:11;;297:38:3;;391:6;258:2;;513:12:11;;-1:-1:-1;;513:12:11;:::i;:::-;-1:-1:-1;535:16:11;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;561:9:11;:20;;;;;;-1:-1:-1;;561:20:11;;;;;;960:7:17;:15;;;;;;;-1:-1:-1;561:9:11;;-1:-1:-1;852:12:9;-1:-1:-1;;;;;852:10:9;:12;:::i;:::-;874:6;:18;;-1:-1:-1;;;;;;874:18:9;-1:-1:-1;;;;;874:18:9;;;;;;;;907:43;;874:18;;-1:-1:-1;874:18:9;-1:-1:-1;;907:43:9;;-1:-1:-1;;907:43:9;-1:-1:-1;266:24:7;;;-1:-1:-1;;;266:24:7;;;;;;;;;;;;-1:-1:-1;;;192:30:7;;;;;;;;;;;;539:45;;266:24;-1:-1:-1;;;;;539:13:7;:45;:::i;:::-;425:1:10;419:3;:7;411:41;;;;;-1:-1:-1;;;411:41:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:4;:10;86:2124:3;;736:104:1;823:10;736:104;;:::o;6257:124:5:-;6340:12;;;;:6;:12;;;;;;:22;;:34;6257:124::o;86:2124:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;86:2124:3;;;-1:-1:-1;86:2124:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "86:2124:3:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;86:2124:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:81:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;653:81:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2545:166:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2545:166:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;148:74:7;;;:::i;:::-;;;;;;;;;;;;;;;;1552:98:12;;;:::i;1808:400:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1808:400:3;;;;;;;;;;;;;;;;;:::i;3764:112:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3764:112:5;;:::i;4126:223::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4126:223:5;;;;;;-1:-1:-1;;;;;4126:223:5;;:::i;:::-;;1481:81:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;558:73:10;;;:::i;5300:205:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5300:205:5;;;;;;-1:-1:-1;;;;;5300:205:5;;:::i;3881:215:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3881:215:12;;;;;;;;:::i;689:210:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;689:210:3;;;;;;;;:::i;1010:169:7:-;;;:::i;1077:76:17:-;;;:::i;739:216:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;739:216:7;;;;;;-1:-1:-1;;;;;739:216:7;;:::i;1708:117:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1708:117:12;-1:-1:-1;;;;;1708:117:12;;:::i;1656:145:9:-;;;:::i;1033:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1033:77:9;;;;;;;;;;;;;;3447:136:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3447:136:5;;;;;;;:::i;2432:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2432:137:5;;;;;;-1:-1:-1;;;;;2432:137:5;;:::i;847:85:11:-;;;:::i;1622:49:5:-;;;:::i;4583:266:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4583:266:12;;;;;;;;:::i;1102:248:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1102:248:3;;;;;;;;:::i;2737:125:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2737:125:5;;:::i;228:62:7:-;;;:::i;4583:226:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4583:226:5;;;;;;-1:-1:-1;;;;;4583:226:5;;:::i;2258:149:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2258:149:12;;;;;;;;;;:::i;1950:115:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1950:115:9;-1:-1:-1;;;;;1950:115:9;;:::i;653:81:11:-;722:5;715:12;;;;;;;;-1:-1:-1;;715:12:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;690:13;;715:12;;722:5;;715:12;;722:5;715:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:81;:::o;2545:166:12:-;2628:4;2644:39;2653:12;:10;:12::i;:::-;2667:7;2676:6;2644:8;:39::i;:::-;-1:-1:-1;2700:4:12;2545:166;;;;;:::o;148:74:7:-;192:30;;;-1:-1:-1;;;192:30:7;;;;;;;;;;;;148:74;:::o;1552:98:12:-;1631:12;;1552:98;:::o;1808:400:3:-;1929:4;1945:59;1978:6;1986:9;1997:6;1945:32;:59::i;:::-;2015:36;2025:6;2033:9;2044:6;2015:9;:36::i;:::-;2061:119;2070:6;2078:12;:10;:12::i;:::-;2092:87;2128:6;2092:87;;;;;;;;;;;;;;;;;:31;2102:6;2110:12;:10;:12::i;:::-;2092:9;:31::i;:::-;:35;:87;;:35;:87;:::i;:::-;2061:8;:119::i;:::-;-1:-1:-1;2197:4:3;1808:400;;;;;:::o;3764:112:5:-;3821:7;3847:12;;;:6;:12;;;;;:22;;;;3764:112::o;4126:223::-;4217:12;;;;:6;:12;;;;;:22;;;4209:45;;4241:12;:10;:12::i;:::-;4209:7;:45::i;:::-;4201:105;;;;-1:-1:-1;;;4201:105:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4317:25;4328:4;4334:7;4317:10;:25::i;:::-;4126:223;;:::o;1481:81:11:-;1546:9;;;;1481:81;:::o;558:73:10:-;620:4;;558:73;:::o;5300:205:5:-;5397:12;:10;:12::i;:::-;-1:-1:-1;;;;;5386:23:5;:7;-1:-1:-1;;;;;5386:23:5;;5378:83;;;;-1:-1:-1;;;5378:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5472:26;5484:4;5490:7;5472:11;:26::i;3881:215:12:-;3969:4;3985:83;3994:12;:10;:12::i;:::-;4008:7;4017:50;4056:10;4017:11;:25;4029:12;:10;:12::i;:::-;-1:-1:-1;;;;;4017:25:12;;;;;;;;;;;;;;;;;-1:-1:-1;4017:25:12;;;:34;;;;;;;;;;;:50;:38;:50;:::i;689:210:3:-;266:24:7;;;-1:-1:-1;;;266:24:7;;;;;;;;;;;;766:4:3;;398:32:7;;419:10;398:7;:32::i;:::-;390:93;;;;-1:-1:-1;;;390:93:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:56:3::1;823:1;827:2;831:6;782:32;:56::i;:::-;848:23;860:2;864:6;848:11;:23::i;1010:169:7:-:0;1247:12:9;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:9;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:9;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:9;;;;;;;;;;;;;;;1074:10:7::1;::::0;-1:-1:-1;;;1074:10:7;::::1;;;1073:11;1065:53;;;::::0;;-1:-1:-1;;;1065:53:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1129:10;:17:::0;;-1:-1:-1;;;;1129:17:7::1;-1:-1:-1::0;;;1129:17:7::1;::::0;;1161:11:::1;::::0;::::1;::::0;1129:17;;1161:11:::1;1010:169::o:0;1077:76:17:-;1139:7;;;;1077:76;:::o;739:216:7:-;822:4;1247:12:9;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:9;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:9;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:9;;;;;;;;;;;;;;;847:10:7::1;::::0;-1:-1:-1;;;847:10:7;::::1;;;846:11;838:53;;;::::0;;-1:-1:-1;;;838:53:7;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;902:25;913:4;919:7;902:10;:25::i;1708:117:12:-:0;-1:-1:-1;;;;;1800:18:12;1774:7;1800:18;;;:9;:18;;;;;;;1708:117::o;1656:145:9:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:9;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:9;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:9;;;;;;;;;;;;;;;1746:6:::1;::::0;1725:40:::1;::::0;1762:1:::1;::::0;-1:-1:-1;;;;;1746:6:9::1;::::0;1725:40:::1;::::0;1762:1;;1725:40:::1;1775:6;:19:::0;;-1:-1:-1;;;;;;1775:19:9::1;::::0;;1656:145::o;1033:77::-;1097:6;;-1:-1:-1;;;;;1097:6:9;1033:77;:::o;3447:136:5:-;3520:7;3546:12;;;:6;:12;;;;;:30;;3570:5;3546:30;:23;:30;:::i;:::-;3539:37;3447:136;-1:-1:-1;;;3447:136:5:o;2432:137::-;2501:4;2524:12;;;:6;:12;;;;;:38;;2554:7;2524:38;:29;:38;:::i;847:85:11:-;918:7;911:14;;;;;;;;-1:-1:-1;;911:14:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;886:13;;911:14;;918:7;;911:14;;918:7;911:14;;;;;;;;;;;;;;;;;;;;;;;;1622:49:5;1667:4;1622:49;:::o;4583:266:12:-;4676:4;4692:129;4701:12;:10;:12::i;:::-;4715:7;4724:96;4763:15;4724:96;;;;;;;;;;;;;;;;;:11;:25;4736:12;:10;:12::i;:::-;-1:-1:-1;;;;;4724:25:12;;;;;;;;;;;;;;;;;-1:-1:-1;4724:25:12;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;1102:248:3:-;1196:4;1212:58;1255:1;1259:2;1263:6;1212:34;:58::i;:::-;1281:41;1297:12;:10;:12::i;:::-;1311:2;1315:6;1281:15;:41::i;2737:125:5:-;2800:7;2826:12;;;:6;:12;;;;;:29;;:27;:29::i;228:62:7:-;266:24;;;-1:-1:-1;;;266:24:7;;;;;;;;;;;;228:62;:::o;4583:226:5:-;4675:12;;;;:6;:12;;;;;:22;;;4667:45;;4699:12;:10;:12::i;4667:45::-;4659:106;;;;-1:-1:-1;;;4659:106:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2258:149:12;-1:-1:-1;;;;;2373:18:12;;;2347:7;2373:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2258:149::o;1950:115:9:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:9;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:9;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:9;;;;;;;;;;;;;;;2030:28:::1;2049:8;2030:18;:28::i;:::-;1950:115:::0;:::o;736:104:1:-;823:10;736:104;:::o;7647:340:12:-;-1:-1:-1;;;;;7748:19:12;;7740:68;;;;-1:-1:-1;;;7740:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7826:21:12;;7818:68;;;;-1:-1:-1;;;7818:68:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7897:18:12;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7948:32;;;;;;;;;;;;;;;;;7647:340;;;:::o;810:396:10:-;940:44;967:4;973:2;977:6;940:26;:44::i;:::-;994:52;1029:4;1035:2;1039:6;994:34;:52::i;:::-;-1:-1:-1;;;;;1061:18:10;;1057:143;;1155:4;;1126:25;1144:6;1126:13;:11;:13::i;:::-;:17;:25;:17;:25;:::i;:::-;:33;;1118:71;;;;;-1:-1:-1;;;1118:71:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:396;;;:::o;5323:530:12:-;-1:-1:-1;;;;;5428:20:12;;5420:70;;;;-1:-1:-1;;;5420:70:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5508:23:12;;5500:71;;;;-1:-1:-1;;;5500:71:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5582:47;5603:6;5611:9;5622:6;5582:20;:47::i;:::-;5660:71;5682:6;5660:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5660:17:12;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5640:17:12;;;;;;;:9;:17;;;;;;:91;;;;5764:20;;;;;;;:32;;5789:6;5764:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5741:20:12;;;;;;;:9;:20;;;;;;;;;:55;;;;5811:35;;;;;;;5741:20;;5811:35;;;;;;;;;;;;;5323:530;;;:::o;1692:187:8:-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1797:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:8;;;1692:187::o;6387:184:5:-;6460:12;;;;:6;:12;;;;;:33;;6485:7;6460:33;:24;:33;:::i;:::-;6456:109;;;6541:12;:10;:12::i;:::-;-1:-1:-1;;;;;6514:40:5;6532:7;-1:-1:-1;;;;;6514:40:5;6526:4;6514:40;;;;;;;;;;6387:184;;:::o;6577:188::-;6651:12;;;;:6;:12;;;;;:36;;6679:7;6651:36;:27;:36;:::i;:::-;6647:112;;;6735:12;:10;:12::i;:::-;-1:-1:-1;;;;;6708:40:5;6726:7;-1:-1:-1;;;;;6708:40:5;6720:4;6708:40;;;;;;;;;;6577:188;;:::o;834:176:8:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;6123:370:12;-1:-1:-1;;;;;6206:21:12;;6198:65;;;;;-1:-1:-1;;;6198:65:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;6274:49;6303:1;6307:7;6316:6;6274:20;:49::i;:::-;6349:12;;:24;;6366:6;6349:24;:16;:24;:::i;:::-;6334:12;:39;-1:-1:-1;;;;;6404:18:12;;;;;;:9;:18;;;;;;:30;;6427:6;6404:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6383:18:12;;;;;;:9;:18;;;;;;;;:51;;;;6449:37;;;;;;;6383:18;;;;6449:37;;;;;;;;;;6123:370;;:::o;6052:147:16:-;6126:7;6168:22;6172:3;6184:5;6168:3;:22::i;5368:156::-;5448:4;5471:46;5481:3;-1:-1:-1;;;;;5501:14:16;;5471:9;:46::i;544:234:14:-;652:44;679:4;685:2;689:6;652:26;:44::i;:::-;716:8;:6;:8::i;:::-;715:9;707:64;;;;-1:-1:-1;;;707:64:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5605:115:16;5668:7;5694:19;5702:3;5694:7;:19::i;2166:233:9:-;-1:-1:-1;;;;;2247:22:9;;2239:73;;;;-1:-1:-1;;;2239:73:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2348:6;;2327:38;;-1:-1:-1;;;;;2327:38:9;;;;2348:6;;2327:38;;2348:6;;2327:38;2375:6;:17;;-1:-1:-1;;;;;;2375:17:9;-1:-1:-1;;;;;2375:17:9;;;;;;;;;;2166:233::o;307:243:13:-;437:44;464:4;470:2;474:6;437:26;:44::i;:::-;491:52;526:4;532:2;536:6;491:34;:52::i;4831:141:16:-;4901:4;4924:41;4929:3;-1:-1:-1;;;;;4949:14:16;;4924:4;:41::i;5140:147::-;5213:4;5236:44;5244:3;-1:-1:-1;;;;;5264:14:16;;5236:7;:44::i;4390:201::-;4484:18;;4457:7;;4484:26;-1:-1:-1;4476:73:16;;;;-1:-1:-1;;;4476:73:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;3743:127::-;3816:4;3839:19;;;:12;;;;;:19;;;;;;:24;;;3743:127::o;3951:107::-;4033:18;;3951:107::o;1578:404::-;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1699:11:16;:23;;;;;;;;;;;;;1879:18;;1857:19;;;:12;;;:19;;;;;;:40;;;;1911:11;;1657:319;-1:-1:-1;1960:5:16;1953:12;;2150:1512;2216:4;2353:19;;;:12;;;:19;;;;;;2387:15;;2383:1273;;2816:18;;-1:-1:-1;;2768:14:16;;;;2816:22;;;;2744:21;;2816:3;;:22;;3098;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;;;;;:38;;;;3316:23;;;3358:1;3316:12;;;:23;;;;;;3342:17;;;3316:43;;3465:17;;3316:3;;3465:17;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;;",
  "source": "pragma solidity ^0.6.0;\n\nimport \"./token/Detailed.sol\";\nimport \"./token/Capped.sol\";\n\ncontract Stars is ERC20Detailed, ERC20Capped {\n\n    string constant private NAME = \"SSS\";\n    string constant private SYMBOL = \"SSS\";\n    uint8 constant private DECIMALS = 18;\n    uint256 constant private CAP = 1000000000 * (10 ** uint256(DECIMALS));\n\n    constructor() public\n        ERC20Detailed(NAME, SYMBOL, DECIMALS)\n        ERC20Capped(CAP) {\n    }\n\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param amount The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 amount) public virtual onlyMinter returns (bool) {\n        ERC20Capped._beforeTokenTransfer(address(0), to, amount);\n        ERC20._mint(to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override(ERC20, IERC20) returns (bool) {\n        ERC20Pausable._beforeTokenTransfer(address(0), to, amount);\n\n        ERC20._transfer(_msgSender(), to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override(ERC20, IERC20) returns (bool) {\n        ERC20Capped._beforeTokenTransfer(sender, recipient, amount);\n\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), allowance(sender, _msgSender()).sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n}\n",
  "sourcePath": "/Applications/projects/nft/newdt/contracts/Stars.sol",
  "ast": {
    "absolutePath": "project:/contracts/Stars.sol",
    "exportedSymbols": {
      "Stars": [
        458
      ]
    },
    "id": 459,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 306,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "project:/contracts/token/Detailed.sol",
        "file": "./token/Detailed.sol",
        "id": 307,
        "nodeType": "ImportDirective",
        "scope": 459,
        "sourceUnit": 2598,
        "src": "25:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/token/Capped.sol",
        "file": "./token/Capped.sol",
        "id": 308,
        "nodeType": "ImportDirective",
        "scope": 459,
        "sourceUnit": 2540,
        "src": "56:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 309,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2597,
              "src": "104:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2597",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 310,
            "nodeType": "InheritanceSpecifier",
            "src": "104:13:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 311,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2539,
              "src": "119:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$2539",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 312,
            "nodeType": "InheritanceSpecifier",
            "src": "119:11:3"
          }
        ],
        "contractDependencies": [
          267,
          1975,
          2155,
          2455,
          2539,
          2597,
          3021,
          3062,
          3097,
          3166,
          3626
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 458,
        "linearizedBaseContracts": [
          458,
          2539,
          3062,
          2155,
          2455,
          1975,
          3097,
          3626,
          3021,
          2597,
          3166,
          267
        ],
        "name": "Stars",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 315,
            "name": "NAME",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 458,
            "src": "138:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 313,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "138:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "535353",
              "id": 314,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "169:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_615bb6bf8412d3555f2dabfa5fe7e96610c7425b907c54a8a42056622efc37b2",
                "typeString": "literal_string \"SSS\""
              },
              "value": "SSS"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 318,
            "name": "SYMBOL",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 458,
            "src": "180:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 316,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "180:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "535353",
              "id": 317,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "213:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_615bb6bf8412d3555f2dabfa5fe7e96610c7425b907c54a8a42056622efc37b2",
                "typeString": "literal_string \"SSS\""
              },
              "value": "SSS"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 321,
            "name": "DECIMALS",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 458,
            "src": "224:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 319,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "224:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 320,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "258:2:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 332,
            "name": "CAP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 458,
            "src": "266:69:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 322,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 331,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31303030303030303030",
                "id": 323,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "297:10:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "value": "1000000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "311:2:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 321,
                          "src": "325:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "317:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 325,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "317:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "317:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "311:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 330,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "310:25:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "297:38:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "434:7:3",
              "statements": []
            },
            "documentation": null,
            "id": 344,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 335,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 315,
                    "src": "385:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 336,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 318,
                    "src": "391:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 337,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 321,
                    "src": "399:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 338,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 334,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2597,
                  "src": "371:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2597_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "371:37:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 340,
                    "name": "CAP",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 332,
                    "src": "429:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 341,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 339,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2539,
                  "src": "417:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$2539_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "417:16:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:2:3"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "434:0:3"
            },
            "scope": 458,
            "src": "342:99:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 375,
              "nodeType": "Block",
              "src": "772:127:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "823:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "815:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 358,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "815:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "815:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "827:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 363,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "831:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 355,
                        "name": "ERC20Capped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2539,
                        "src": "782:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$2539_$",
                          "typeString": "type(contract ERC20Capped)"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2538,
                      "src": "782:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "782:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "782:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 369,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "860:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 370,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "864:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 366,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3021,
                        "src": "848:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3021_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2911,
                      "src": "848:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "848:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "888:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 354,
                  "id": 374,
                  "nodeType": "Return",
                  "src": "881:11:3"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param amount The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "functionSelector": "40c10f19",
            "id": 376,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 351,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 350,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2101,
                  "src": "746:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "746:10:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 376,
                  "src": "703:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "703:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 348,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 376,
                  "src": "715:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "702:28:3"
            },
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 376,
                  "src": "766:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "765:6:3"
            },
            "scope": 458,
            "src": "689:210:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2663,
              3120
            ],
            "body": {
              "id": 410,
              "nodeType": "Block",
              "src": "1202:148:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1255:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1247:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 391,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1247:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1247:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 395,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "1259:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 396,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "1263:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 388,
                        "name": "ERC20Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3097,
                        "src": "1212:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Pausable_$3097_$",
                          "typeString": "type(contract ERC20Pausable)"
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3096,
                      "src": "1212:34:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1212:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "1212:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 402,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 255,
                          "src": "1297:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1297:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 404,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "1311:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 405,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "1315:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 399,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3021,
                        "src": "1281:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3021_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2857,
                      "src": "1281:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1281:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "1281:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1339:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 387,
                  "id": 409,
                  "nodeType": "Return",
                  "src": "1332:11:3"
                }
              ]
            },
            "documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
            "functionSelector": "a9059cbb",
            "id": 411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 384,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 382,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3021,
                  "src": "1172:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3021",
                    "typeString": "contract ERC20"
                  }
                },
                {
                  "contractScope": null,
                  "id": 383,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3166,
                  "src": "1179:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3166",
                    "typeString": "contract IERC20"
                  }
                }
              ],
              "src": "1163:23:3"
            },
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 411,
                  "src": "1120:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1120:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 411,
                  "src": "1132:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1119:28:3"
            },
            "returnParameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 411,
                  "src": "1196:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1195:6:3"
            },
            "scope": 458,
            "src": "1102:248:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2737,
              3149
            ],
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "1935:273:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 428,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "1978:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 429,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "1986:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 430,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "1997:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 425,
                        "name": "ERC20Capped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2539,
                        "src": "1945:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$2539_$",
                          "typeString": "type(contract ERC20Capped)"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2538,
                      "src": "1945:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1945:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 434,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "2025:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 435,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "2033:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 436,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "2044:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 433,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2857,
                      "src": "2015:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 440,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "2070:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 441,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 255,
                          "src": "2078:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2078:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 449,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "2128:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2136:42:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            },
                            "value": "ERC20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 444,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "2102:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 445,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 255,
                                  "src": "2110:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2110:12:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 443,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2680,
                              "src": "2092:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view returns (uint256)"
                              }
                            },
                            "id": 447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2092:31:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2225,
                          "src": "2092:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2092:87:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 439,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3010,
                      "src": "2061:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2061:119:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "2061:119:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2197:4:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 424,
                  "id": 455,
                  "nodeType": "Return",
                  "src": "2190:11:3"
                }
              ]
            },
            "documentation": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
            "functionSelector": "23b872dd",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 421,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 419,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3021,
                  "src": "1905:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3021",
                    "typeString": "contract ERC20"
                  }
                },
                {
                  "contractScope": null,
                  "id": 420,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3166,
                  "src": "1912:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3166",
                    "typeString": "contract IERC20"
                  }
                }
              ],
              "src": "1896:23:3"
            },
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 457,
                  "src": "1830:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 415,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 457,
                  "src": "1846:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 417,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 457,
                  "src": "1865:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1829:51:3"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 457,
                  "src": "1929:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1928:6:3"
            },
            "scope": 458,
            "src": "1808:400:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 459,
        "src": "86:2124:3"
      }
    ],
    "src": "0:2211:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Stars.sol",
      "exportedSymbols": {
        "Stars": [
          458
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 306,
        "name": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "attributes": {
          "SourceUnit": 2598,
          "absolutePath": "project:/contracts/token/Detailed.sol",
          "file": "./token/Detailed.sol",
          "scope": 459,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 307,
        "name": "ImportDirective",
        "src": "25:30:3"
      },
      {
        "attributes": {
          "SourceUnit": 2540,
          "absolutePath": "project:/contracts/token/Capped.sol",
          "file": "./token/Capped.sol",
          "scope": 459,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 308,
        "name": "ImportDirective",
        "src": "56:28:3"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            267,
            1975,
            2155,
            2455,
            2539,
            2597,
            3021,
            3062,
            3097,
            3166,
            3626
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            458,
            2539,
            3062,
            2155,
            2455,
            1975,
            3097,
            3626,
            3021,
            2597,
            3166,
            267
          ],
          "name": "Stars",
          "scope": 459
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Detailed",
                  "referencedDeclaration": 2597,
                  "type": "contract ERC20Detailed"
                },
                "id": 309,
                "name": "UserDefinedTypeName",
                "src": "104:13:3"
              }
            ],
            "id": 310,
            "name": "InheritanceSpecifier",
            "src": "104:13:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Capped",
                  "referencedDeclaration": 2539,
                  "type": "contract ERC20Capped"
                },
                "id": 311,
                "name": "UserDefinedTypeName",
                "src": "119:11:3"
              }
            ],
            "id": 312,
            "name": "InheritanceSpecifier",
            "src": "119:11:3"
          },
          {
            "attributes": {
              "constant": true,
              "name": "NAME",
              "overrides": null,
              "scope": 458,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 313,
                "name": "ElementaryTypeName",
                "src": "138:6:3"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "535353",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"SSS\"",
                  "value": "SSS"
                },
                "id": 314,
                "name": "Literal",
                "src": "169:5:3"
              }
            ],
            "id": 315,
            "name": "VariableDeclaration",
            "src": "138:36:3"
          },
          {
            "attributes": {
              "constant": true,
              "name": "SYMBOL",
              "overrides": null,
              "scope": 458,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 316,
                "name": "ElementaryTypeName",
                "src": "180:6:3"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "535353",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"SSS\"",
                  "value": "SSS"
                },
                "id": 317,
                "name": "Literal",
                "src": "213:5:3"
              }
            ],
            "id": 318,
            "name": "VariableDeclaration",
            "src": "180:38:3"
          },
          {
            "attributes": {
              "constant": true,
              "name": "DECIMALS",
              "overrides": null,
              "scope": 458,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint8",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint8",
                  "type": "uint8"
                },
                "id": 319,
                "name": "ElementaryTypeName",
                "src": "224:5:3"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "3138",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 18",
                  "value": "18"
                },
                "id": 320,
                "name": "Literal",
                "src": "258:2:3"
              }
            ],
            "id": 321,
            "name": "VariableDeclaration",
            "src": "224:36:3"
          },
          {
            "attributes": {
              "constant": true,
              "name": "CAP",
              "overrides": null,
              "scope": 458,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 322,
                "name": "ElementaryTypeName",
                "src": "266:7:3"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "*",
                  "type": "uint256"
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "31303030303030303030",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 1000000000",
                      "value": "1000000000"
                    },
                    "id": 323,
                    "name": "Literal",
                    "src": "297:10:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "type": "uint256"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "operator": "**",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "3130",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 10",
                              "value": "10"
                            },
                            "id": 324,
                            "name": "Literal",
                            "src": "311:2:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": null
                                    },
                                    "id": 325,
                                    "name": "ElementaryTypeName",
                                    "src": "317:7:3"
                                  }
                                ],
                                "id": 326,
                                "name": "ElementaryTypeNameExpression",
                                "src": "317:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 321,
                                  "type": "uint8",
                                  "value": "DECIMALS"
                                },
                                "id": 327,
                                "name": "Identifier",
                                "src": "325:8:3"
                              }
                            ],
                            "id": 328,
                            "name": "FunctionCall",
                            "src": "317:17:3"
                          }
                        ],
                        "id": 329,
                        "name": "BinaryOperation",
                        "src": "311:23:3"
                      }
                    ],
                    "id": 330,
                    "name": "TupleExpression",
                    "src": "310:25:3"
                  }
                ],
                "id": 331,
                "name": "BinaryOperation",
                "src": "297:38:3"
              }
            ],
            "id": 332,
            "name": "VariableDeclaration",
            "src": "266:69:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 458,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 333,
                "name": "ParameterList",
                "src": "353:2:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 342,
                "name": "ParameterList",
                "src": "434:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2597,
                      "type": "type(contract ERC20Detailed)",
                      "value": "ERC20Detailed"
                    },
                    "id": 334,
                    "name": "Identifier",
                    "src": "371:13:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 315,
                      "type": "string memory",
                      "value": "NAME"
                    },
                    "id": 335,
                    "name": "Identifier",
                    "src": "385:4:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 318,
                      "type": "string memory",
                      "value": "SYMBOL"
                    },
                    "id": 336,
                    "name": "Identifier",
                    "src": "391:6:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 321,
                      "type": "uint8",
                      "value": "DECIMALS"
                    },
                    "id": 337,
                    "name": "Identifier",
                    "src": "399:8:3"
                  }
                ],
                "id": 338,
                "name": "ModifierInvocation",
                "src": "371:37:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2539,
                      "type": "type(contract ERC20Capped)",
                      "value": "ERC20Capped"
                    },
                    "id": 339,
                    "name": "Identifier",
                    "src": "417:11:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 332,
                      "type": "uint256",
                      "value": "CAP"
                    },
                    "id": 340,
                    "name": "Identifier",
                    "src": "429:3:3"
                  }
                ],
                "id": 341,
                "name": "ModifierInvocation",
                "src": "417:16:3"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 343,
                "name": "Block",
                "src": "434:7:3"
              }
            ],
            "id": 344,
            "name": "FunctionDefinition",
            "src": "342:99:3"
          },
          {
            "attributes": {
              "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param amount The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
              "functionSelector": "40c10f19",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "overrides": null,
              "scope": 458,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "overrides": null,
                      "scope": 376,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 345,
                        "name": "ElementaryTypeName",
                        "src": "703:7:3"
                      }
                    ],
                    "id": 346,
                    "name": "VariableDeclaration",
                    "src": "703:10:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "overrides": null,
                      "scope": 376,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 347,
                        "name": "ElementaryTypeName",
                        "src": "715:7:3"
                      }
                    ],
                    "id": 348,
                    "name": "VariableDeclaration",
                    "src": "715:14:3"
                  }
                ],
                "id": 349,
                "name": "ParameterList",
                "src": "702:28:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 376,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 352,
                        "name": "ElementaryTypeName",
                        "src": "766:4:3"
                      }
                    ],
                    "id": 353,
                    "name": "VariableDeclaration",
                    "src": "766:4:3"
                  }
                ],
                "id": 354,
                "name": "ParameterList",
                "src": "765:6:3"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2101,
                      "type": "modifier ()",
                      "value": "onlyMinter"
                    },
                    "id": 350,
                    "name": "Identifier",
                    "src": "746:10:3"
                  }
                ],
                "id": 351,
                "name": "ModifierInvocation",
                "src": "746:10:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_beforeTokenTransfer",
                              "referencedDeclaration": 2538,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2539,
                                  "type": "type(contract ERC20Capped)",
                                  "value": "ERC20Capped"
                                },
                                "id": 355,
                                "name": "Identifier",
                                "src": "782:11:3"
                              }
                            ],
                            "id": 357,
                            "name": "MemberAccess",
                            "src": "782:32:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 358,
                                    "name": "ElementaryTypeName",
                                    "src": "815:7:3"
                                  }
                                ],
                                "id": 359,
                                "name": "ElementaryTypeNameExpression",
                                "src": "815:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 360,
                                "name": "Literal",
                                "src": "823:1:3"
                              }
                            ],
                            "id": 361,
                            "name": "FunctionCall",
                            "src": "815:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 346,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 362,
                            "name": "Identifier",
                            "src": "827:2:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 348,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 363,
                            "name": "Identifier",
                            "src": "831:6:3"
                          }
                        ],
                        "id": 364,
                        "name": "FunctionCall",
                        "src": "782:56:3"
                      }
                    ],
                    "id": 365,
                    "name": "ExpressionStatement",
                    "src": "782:56:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_mint",
                              "referencedDeclaration": 2911,
                              "type": "function (address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3021,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 366,
                                "name": "Identifier",
                                "src": "848:5:3"
                              }
                            ],
                            "id": 368,
                            "name": "MemberAccess",
                            "src": "848:11:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 346,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 369,
                            "name": "Identifier",
                            "src": "860:2:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 348,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 370,
                            "name": "Identifier",
                            "src": "864:6:3"
                          }
                        ],
                        "id": 371,
                        "name": "FunctionCall",
                        "src": "848:23:3"
                      }
                    ],
                    "id": 372,
                    "name": "ExpressionStatement",
                    "src": "848:23:3"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 354
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 373,
                        "name": "Literal",
                        "src": "888:4:3"
                      }
                    ],
                    "id": 374,
                    "name": "Return",
                    "src": "881:11:3"
                  }
                ],
                "id": 375,
                "name": "Block",
                "src": "772:127:3"
              }
            ],
            "id": 376,
            "name": "FunctionDefinition",
            "src": "689:210:3"
          },
          {
            "attributes": {
              "baseFunctions": [
                2663,
                3120
              ],
              "documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
              "functionSelector": "a9059cbb",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "transfer",
              "scope": 458,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20",
                      "referencedDeclaration": 3021,
                      "type": "contract ERC20"
                    },
                    "id": 382,
                    "name": "UserDefinedTypeName",
                    "src": "1172:5:3"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "IERC20",
                      "referencedDeclaration": 3166,
                      "type": "contract IERC20"
                    },
                    "id": 383,
                    "name": "UserDefinedTypeName",
                    "src": "1179:6:3"
                  }
                ],
                "id": 384,
                "name": "OverrideSpecifier",
                "src": "1163:23:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "overrides": null,
                      "scope": 411,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 377,
                        "name": "ElementaryTypeName",
                        "src": "1120:7:3"
                      }
                    ],
                    "id": 378,
                    "name": "VariableDeclaration",
                    "src": "1120:10:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "overrides": null,
                      "scope": 411,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 379,
                        "name": "ElementaryTypeName",
                        "src": "1132:7:3"
                      }
                    ],
                    "id": 380,
                    "name": "VariableDeclaration",
                    "src": "1132:14:3"
                  }
                ],
                "id": 381,
                "name": "ParameterList",
                "src": "1119:28:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 411,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 385,
                        "name": "ElementaryTypeName",
                        "src": "1196:4:3"
                      }
                    ],
                    "id": 386,
                    "name": "VariableDeclaration",
                    "src": "1196:4:3"
                  }
                ],
                "id": 387,
                "name": "ParameterList",
                "src": "1195:6:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_beforeTokenTransfer",
                              "referencedDeclaration": 3096,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3097,
                                  "type": "type(contract ERC20Pausable)",
                                  "value": "ERC20Pausable"
                                },
                                "id": 388,
                                "name": "Identifier",
                                "src": "1212:13:3"
                              }
                            ],
                            "id": 390,
                            "name": "MemberAccess",
                            "src": "1212:34:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 391,
                                    "name": "ElementaryTypeName",
                                    "src": "1247:7:3"
                                  }
                                ],
                                "id": 392,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1247:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 393,
                                "name": "Literal",
                                "src": "1255:1:3"
                              }
                            ],
                            "id": 394,
                            "name": "FunctionCall",
                            "src": "1247:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 378,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 395,
                            "name": "Identifier",
                            "src": "1259:2:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 380,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 396,
                            "name": "Identifier",
                            "src": "1263:6:3"
                          }
                        ],
                        "id": 397,
                        "name": "FunctionCall",
                        "src": "1212:58:3"
                      }
                    ],
                    "id": 398,
                    "name": "ExpressionStatement",
                    "src": "1212:58:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_transfer",
                              "referencedDeclaration": 2857,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3021,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 399,
                                "name": "Identifier",
                                "src": "1281:5:3"
                              }
                            ],
                            "id": 401,
                            "name": "MemberAccess",
                            "src": "1281:15:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 255,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 402,
                                "name": "Identifier",
                                "src": "1297:10:3"
                              }
                            ],
                            "id": 403,
                            "name": "FunctionCall",
                            "src": "1297:12:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 378,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 404,
                            "name": "Identifier",
                            "src": "1311:2:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 380,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 405,
                            "name": "Identifier",
                            "src": "1315:6:3"
                          }
                        ],
                        "id": 406,
                        "name": "FunctionCall",
                        "src": "1281:41:3"
                      }
                    ],
                    "id": 407,
                    "name": "ExpressionStatement",
                    "src": "1281:41:3"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 387
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 408,
                        "name": "Literal",
                        "src": "1339:4:3"
                      }
                    ],
                    "id": 409,
                    "name": "Return",
                    "src": "1332:11:3"
                  }
                ],
                "id": 410,
                "name": "Block",
                "src": "1202:148:3"
              }
            ],
            "id": 411,
            "name": "FunctionDefinition",
            "src": "1102:248:3"
          },
          {
            "attributes": {
              "baseFunctions": [
                2737,
                3149
              ],
              "documentation": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
              "functionSelector": "23b872dd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "transferFrom",
              "scope": 458,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20",
                      "referencedDeclaration": 3021,
                      "type": "contract ERC20"
                    },
                    "id": 419,
                    "name": "UserDefinedTypeName",
                    "src": "1905:5:3"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "IERC20",
                      "referencedDeclaration": 3166,
                      "type": "contract IERC20"
                    },
                    "id": 420,
                    "name": "UserDefinedTypeName",
                    "src": "1912:6:3"
                  }
                ],
                "id": 421,
                "name": "OverrideSpecifier",
                "src": "1896:23:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sender",
                      "overrides": null,
                      "scope": 457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 412,
                        "name": "ElementaryTypeName",
                        "src": "1830:7:3"
                      }
                    ],
                    "id": 413,
                    "name": "VariableDeclaration",
                    "src": "1830:14:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "recipient",
                      "overrides": null,
                      "scope": 457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 414,
                        "name": "ElementaryTypeName",
                        "src": "1846:7:3"
                      }
                    ],
                    "id": 415,
                    "name": "VariableDeclaration",
                    "src": "1846:17:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "overrides": null,
                      "scope": 457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 416,
                        "name": "ElementaryTypeName",
                        "src": "1865:7:3"
                      }
                    ],
                    "id": 417,
                    "name": "VariableDeclaration",
                    "src": "1865:14:3"
                  }
                ],
                "id": 418,
                "name": "ParameterList",
                "src": "1829:51:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 422,
                        "name": "ElementaryTypeName",
                        "src": "1929:4:3"
                      }
                    ],
                    "id": 423,
                    "name": "VariableDeclaration",
                    "src": "1929:4:3"
                  }
                ],
                "id": 424,
                "name": "ParameterList",
                "src": "1928:6:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_beforeTokenTransfer",
                              "referencedDeclaration": 2538,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2539,
                                  "type": "type(contract ERC20Capped)",
                                  "value": "ERC20Capped"
                                },
                                "id": 425,
                                "name": "Identifier",
                                "src": "1945:11:3"
                              }
                            ],
                            "id": 427,
                            "name": "MemberAccess",
                            "src": "1945:32:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 413,
                              "type": "address",
                              "value": "sender"
                            },
                            "id": 428,
                            "name": "Identifier",
                            "src": "1978:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 415,
                              "type": "address",
                              "value": "recipient"
                            },
                            "id": 429,
                            "name": "Identifier",
                            "src": "1986:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 417,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 430,
                            "name": "Identifier",
                            "src": "1997:6:3"
                          }
                        ],
                        "id": 431,
                        "name": "FunctionCall",
                        "src": "1945:59:3"
                      }
                    ],
                    "id": 432,
                    "name": "ExpressionStatement",
                    "src": "1945:59:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2857,
                              "type": "function (address,address,uint256)",
                              "value": "_transfer"
                            },
                            "id": 433,
                            "name": "Identifier",
                            "src": "2015:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 413,
                              "type": "address",
                              "value": "sender"
                            },
                            "id": 434,
                            "name": "Identifier",
                            "src": "2025:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 415,
                              "type": "address",
                              "value": "recipient"
                            },
                            "id": 435,
                            "name": "Identifier",
                            "src": "2033:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 417,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 436,
                            "name": "Identifier",
                            "src": "2044:6:3"
                          }
                        ],
                        "id": 437,
                        "name": "FunctionCall",
                        "src": "2015:36:3"
                      }
                    ],
                    "id": 438,
                    "name": "ExpressionStatement",
                    "src": "2015:36:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3010,
                              "type": "function (address,address,uint256)",
                              "value": "_approve"
                            },
                            "id": 439,
                            "name": "Identifier",
                            "src": "2061:8:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 413,
                              "type": "address",
                              "value": "sender"
                            },
                            "id": 440,
                            "name": "Identifier",
                            "src": "2070:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 255,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 441,
                                "name": "Identifier",
                                "src": "2078:10:3"
                              }
                            ],
                            "id": 442,
                            "name": "FunctionCall",
                            "src": "2078:12:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                                      "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sub",
                                  "referencedDeclaration": 2225,
                                  "type": "function (uint256,uint256,string memory) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2680,
                                          "type": "function (address,address) view returns (uint256)",
                                          "value": "allowance"
                                        },
                                        "id": 443,
                                        "name": "Identifier",
                                        "src": "2092:9:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 413,
                                          "type": "address",
                                          "value": "sender"
                                        },
                                        "id": 444,
                                        "name": "Identifier",
                                        "src": "2102:6:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "address payable",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                null
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 255,
                                              "type": "function () view returns (address payable)",
                                              "value": "_msgSender"
                                            },
                                            "id": 445,
                                            "name": "Identifier",
                                            "src": "2110:10:3"
                                          }
                                        ],
                                        "id": 446,
                                        "name": "FunctionCall",
                                        "src": "2110:12:3"
                                      }
                                    ],
                                    "id": 447,
                                    "name": "FunctionCall",
                                    "src": "2092:31:3"
                                  }
                                ],
                                "id": 448,
                                "name": "MemberAccess",
                                "src": "2092:35:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 417,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 449,
                                "name": "Identifier",
                                "src": "2128:6:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "string",
                                  "type": "literal_string \"ERC20: transfer amount exceeds allowance\"",
                                  "value": "ERC20: transfer amount exceeds allowance"
                                },
                                "id": 450,
                                "name": "Literal",
                                "src": "2136:42:3"
                              }
                            ],
                            "id": 451,
                            "name": "FunctionCall",
                            "src": "2092:87:3"
                          }
                        ],
                        "id": 452,
                        "name": "FunctionCall",
                        "src": "2061:119:3"
                      }
                    ],
                    "id": 453,
                    "name": "ExpressionStatement",
                    "src": "2061:119:3"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 424
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 454,
                        "name": "Literal",
                        "src": "2197:4:3"
                      }
                    ],
                    "id": 455,
                    "name": "Return",
                    "src": "2190:11:3"
                  }
                ],
                "id": 456,
                "name": "Block",
                "src": "1935:273:3"
              }
            ],
            "id": 457,
            "name": "FunctionDefinition",
            "src": "1808:400:3"
          }
        ],
        "id": 458,
        "name": "ContractDefinition",
        "src": "86:2124:3"
      }
    ],
    "id": 459,
    "name": "SourceUnit",
    "src": "0:2211:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-29T12:26:38.276Z",
  "devdoc": {
    "methods": {
      "addAdmin(bytes32,address)": {
        "details": "Create and ading new role.",
        "params": {
          "account": "account for adding to the role.",
          "role": "role account."
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "finalize()": {
        "details": "block adding admins."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "amount": "The amount of tokens to mint.",
          "to": "The address that will receive the minted tokens."
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}