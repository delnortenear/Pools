{
  "contractName": "DTV",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addAdmin(bytes32,address)\":{\"details\":\"Create and ading new role.\",\"params\":{\"account\":\"account for adding to the role.\",\"role\":\"role account.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"finalize()\":{\"details\":\"block adding admins.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"amount\":\"The amount of tokens to mint.\",\"to\":\"The address that will receive the minted tokens.\"},\"returns\":{\"_0\":\"A boolean that indicates if the operation was successful.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DTV.sol\":\"DTV\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/DTV.sol\":{\"keccak256\":\"0xdae81a1ed965a2cbae790025df5997f827dcefc3f02351606803d0ac283c59ed\",\"urls\":[\"bzz-raw://8a3027c741a56e3edd3c09be205324e02eeedbc22983b95d2fc4b2f0be6216c0\",\"dweb:/ipfs/Qme8zFGGU5Unhpm5pCnSFkJYgN5XU3NH1cSinxT8ec1oLk\"]},\"project:/contracts/GSN/Context.sol\":{\"keccak256\":\"0x24e53395fee93f162fd823922bcddc3bfee51ef227ef25128ea384d7b1aa8d3f\",\"urls\":[\"bzz-raw://f2a5bc8b6e1abd82d225e625a043db29de4fd9d82acee7ab8a2386f15bcbd10b\",\"dweb:/ipfs/QmaemrdcPM7QNpdzWb1cVD5ZAmo3E1C82xQQexc8RtLrq9\"]},\"project:/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc432e2b1ae0cfb66f539ae232ae2d9c38427543b38d84543ff995d7f0a070615\",\"urls\":[\"bzz-raw://ce72cf19f702a2c0b0d779aee381e27ae0f6ef1e2f8cbca2c4f5c70738bd7d1b\",\"dweb:/ipfs/QmaeBt2tKm4TyNq5XGWPouJtniSUJ4YVLfQDpVS4YWDL1Y\"]},\"project:/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xfce2091bc16c26c16c2a66e2251adcc3473effeb24db772adde01d3a767a92c5\",\"urls\":[\"bzz-raw://519a82f248a58a8334d23c880b5922c23632f9f2f6dcbfaddb888a7b8ca673ce\",\"dweb:/ipfs/QmfTV2zywibbCU7eDzgStXu4A4RC43b5qL1QXpwzyewBaP\"]},\"project:/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa36a7b370cc5fe4be6358cc8f8e5b236c9b8c5dc57dfc472a7f81400ba86099e\",\"urls\":[\"bzz-raw://7aa771ffe3d39d2b6c8b5db675520e50d88da1fbb211093a84cb063d9a4a628c\",\"dweb:/ipfs/QmSc1s2JC2qMct8wKBBGL4YrWi6xBXz8XxQDb6cvFiWzng\"]},\"project:/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84aff05fc85ef61fdfa395cfdbe5e10500b6883ed9f315b62615d706ccd71390\",\"urls\":[\"bzz-raw://65dd62fe156059f0d79961b4deefdc404c8178a6b07d5de23314a3574e42bf36\",\"dweb:/ipfs/QmVdTPB8togMU8DNYPEuyy3pwtvzS7czuU9PTKBQzAZQSL\"]},\"project:/contracts/token/Capped.sol\":{\"keccak256\":\"0x24f29dcf17f40db8050389ea0240557fc13eb05e0bdc057fe7adadf2357a03e9\",\"urls\":[\"bzz-raw://24a3b5a80631b7a1a15d388bffa46872a91a6f2dc100bd0854b06710900f06a9\",\"dweb:/ipfs/QmXrZusj2RAjF5Uif5HEWc9Te3Na3YVFz5hYpTZVJLkisi\"]},\"project:/contracts/token/Detailed.sol\":{\"keccak256\":\"0xc4d6d651f0e312be32b89676ccc646e7f802e371c8fc5310caf7158eef380e07\",\"urls\":[\"bzz-raw://a38715abc3f3b5f800c2ac8df87024e8ef84604ca70efc8c5f1fd3061bad37da\",\"dweb:/ipfs/QmXHeQ4wiRP8c5vTpLYnR7jfX6ULQg7phj8W8T37aiZhXr\"]},\"project:/contracts/token/ERC20.sol\":{\"keccak256\":\"0xea9b36e89a6ca93fe223d7e6dcff6853a2bdbd960f0830610753130df7e6669e\",\"urls\":[\"bzz-raw://c4030c71d0255c683ca5bd9cec503a7d520860a5fe6271688049a9cefd162c97\",\"dweb:/ipfs/QmW9kuDc2AjtLmNNdjyJd1bbA49C39GpCBwzNDP3vDrDvP\"]},\"project:/contracts/token/ERC20Mintable.sol\":{\"keccak256\":\"0x9abfdf67d5fc7412791401343fe1826302ead0493225a4e87f6d2d7315805c7e\",\"urls\":[\"bzz-raw://517cb66cb1333e4581acea72636184738526c14f6f05da46e1b4246e65f5560d\",\"dweb:/ipfs/QmcU6gRvzQRF7SDq1uzQYb29uXpqfT9VzHqGk5AjShkxLa\"]},\"project:/contracts/token/ERC20Pausable.sol\":{\"keccak256\":\"0xe957d507d925deca0957e2dd55aa73555f5bf676e23bd4621f2eb6ef2df3c026\",\"urls\":[\"bzz-raw://e341987c07d54fd55318d62cb4dd77e3f8de63dd6f89552598141dec35d09252\",\"dweb:/ipfs/QmZ74v43fX6dNUTgTKpcZyrVpzGFKp4NGFRQE14k3D4PTK\"]},\"project:/contracts/token/IERC20.sol\":{\"keccak256\":\"0x3643df6c1f960607f41a8617cbb0c0e036f65589ce4b2860e7d975bf8dabbec1\",\"urls\":[\"bzz-raw://26c639be3d90b25c193402e8a4b0fa64fe0812d4bbaee68db3a77271d0d081a3\",\"dweb:/ipfs/QmQRbHW1bC8qUvManw6M88BmK2kfbidz4TWwBnaxJVaxQM\"]},\"project:/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xe2a9ad9ddc0004c34fa5e59e0c70f9e5a61ff17a6419de0bc8745b31525c310b\",\"urls\":[\"bzz-raw://1ee2bcdb983c586b2bb8af4d4157e1136c25c3eebdcd3459ee729888afd0ba4c\",\"dweb:/ipfs/QmPwoNSZgd3L6ghCA1Rih58AJayF4FLMVS7mcySC6AikBN\"]},\"project:/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x83708c6452b75f9d1cecc141dadb87eb429aac2335f7327e6b6e83e71a058c79\",\"urls\":[\"bzz-raw://46bd7141b6c786f9b8fc852227350ac369a95b7417fd5ea028a89f83ea19bca1\",\"dweb:/ipfs/QmbETHXAGFWtm1NdwR2jsfq2cyUR2ckdxs8raw5pFA1WVe\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600860146101000a81548160ff0219169083151502179055503480156200002c57600080fd5b50601260ff16600a0a633b9aca00026040518060400160405280600d81526020017f44656c6e6f727465546f6b656e000000000000000000000000000000000000008152506040518060400160405280600381526020017f445456000000000000000000000000000000000000000000000000000000000081525060128260009080519060200190620000c1929190620002ed565b508160019080519060200190620000da929190620002ed565b5080600260006101000a81548160ff021916908360ff1602179055505050506000600660006101000a81548160ff021916908315150217905550600062000126620002c660201b60201c565b905080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506200024160405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902060405180807f4d494e5445525f41444d494e5f524f4c4500000000000000000000000000000081525060110190506040518091039020620002ce60201b60201c565b60008111620002b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f45524332304361707065643a206361702069732030000000000000000000000081525060200191505060405180910390fd5b80600981905550506200039c565b600033905090565b8060076000848152602001908152602001600020600201819055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033057805160ff191683800117855562000361565b8280016001018555821562000361579182015b828111156200036057825182559160200191906001019062000343565b5b50905062000370919062000374565b5090565b6200039991905b80821115620003955760008160009055506001016200037b565b5090565b90565b6128ee80620003ac6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636419bcdb11610104578063a217fddf116100a2578063d539139311610071578063d539139314610936578063d547741f14610954578063dd62ed3e146109a2578063f2fde38b14610a1a576101cf565b8063a217fddf1461080a578063a457c2d714610828578063a9059cbb1461088e578063ca15c873146108f4576101cf565b80638da5cb5b116100de5780638da5cb5b1461065f5780639010d07c146106a957806391d148541461072157806395d89b4114610787576101cf565b80636419bcdb1461059757806370a08231146105fd578063715018a614610655576101cf565b8063313ce56711610171578063395093511161014b578063395093511461049f57806340c10f19146105055780634bb278f31461056b5780635c975abb14610575576101cf565b8063313ce5671461040f578063355274ea1461043357806336568abe14610451576101cf565b806318160ddd116101ad57806318160ddd146102db57806323b872dd146102f9578063248a9ca31461037f5780632f2ff15d146103c1576101cf565b806306fdde03146101d4578063095ea7b3146102575780631339324b146102bd575b600080fd5b6101dc610a5e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021c578082015181840152602081019050610201565b50505050905090810190601f1680156102495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a36004803603604081101561026d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b00565b604051808215151515815260200191505060405180910390f35b6102c5610b1e565b6040518082815260200191505060405180910390f35b6102e3610b57565b6040518082815260200191505060405180910390f35b6103656004803603606081101561030f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b61565b604051808215151515815260200191505060405180910390f35b6103ab6004803603602081101561039557600080fd5b8101908080359060200190929190505050610bd2565b6040518082815260200191505060405180910390f35b61040d600480360360408110156103d757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bf2565b005b610417610c7c565b604051808260ff1660ff16815260200191505060405180910390f35b61043b610c93565b6040518082815260200191505060405180910390f35b61049d6004803603604081101561046757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c9d565b005b6104eb600480360360408110156104b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d36565b604051808215151515815260200191505060405180910390f35b6105516004803603604081101561051b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610de9565b604051808215151515815260200191505060405180910390f35b610573610e9f565b005b61057d611035565b604051808215151515815260200191505060405180910390f35b6105e3600480360360408110156105ad57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104c565b604051808215151515815260200191505060405180910390f35b61063f6004803603602081101561061357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111af565b6040518082815260200191505060405180910390f35b61065d6111f8565b005b610667611383565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106df600480360360408110156106bf57600080fd5b8101908080359060200190929190803590602001909291905050506113ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61076d6004803603604081101561073757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113df565b604051808215151515815260200191505060405180910390f35b61078f611411565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107cf5780820151818401526020810190506107b4565b50505050905090810190601f1680156107fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108126114b3565b6040518082815260200191505060405180910390f35b6108746004803603604081101561083e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114ba565b604051808215151515815260200191505060405180910390f35b6108da600480360360408110156108a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611587565b604051808215151515815260200191505060405180910390f35b6109206004803603602081101561090a57600080fd5b81019080803590602001909291905050506115b1565b6040518082815260200191505060405180910390f35b61093e6115d8565b6040518082815260200191505060405180910390f35b6109a06004803603604081101561096a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611611565b005b610a04600480360360408110156109b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061169b565b6040518082815260200191505060405180910390f35b610a5c60048036036020811015610a3057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611722565b005b606060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610af65780601f10610acb57610100808354040283529160200191610af6565b820191906000526020600020905b815481529060010190602001808311610ad957829003601f168201915b5050505050905090565b6000610b14610b0d6117f8565b8484611800565b6001905092915050565b60405180807f4d494e5445525f41444d494e5f524f4c450000000000000000000000000000008152506011019050604051809103902081565b6000600554905090565b6000610b6e8484846119f7565b610b79848484611ad9565b610bc784610b856117f8565b610bc2856040518060600160405280602881526020016127ca60289139610bb38a610bae6117f8565b61169b565b611d9e9092919063ffffffff16565b611800565b600190509392505050565b600060076000838152602001908152602001600020600201549050919050565b610c196007600084815260200190815260200160002060020154610c146117f8565b6113df565b610c6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806126cd602f913960400191505060405180910390fd5b610c788282611e5e565b5050565b6000600260009054906101000a900460ff16905090565b6000600954905090565b610ca56117f8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612860602f913960400191505060405180910390fd5b610d328282611ef2565b5050565b6000610ddf610d436117f8565b84610dda8560046000610d546117f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8690919063ffffffff16565b611800565b6001905092915050565b6000610e2a60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020336113df565b610e7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061279a6030913960400191505060405180910390fd5b610e8b600084846119f7565b610e95838361200e565b6001905092915050565b610ea76117f8565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600860149054906101000a900460ff1615610fec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4d696e746572526f6c653a20616c72656164792066696e616c697a656400000081525060200191505060405180910390fd5b6001600860146101000a81548160ff0219169083151502179055507f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a1565b6000600660009054906101000a900460ff16905090565b60006110566117f8565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611118576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600860149054906101000a900460ff161561119b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4d696e746572526f6c653a20616c72656164792066696e616c697a656400000081525060200191505060405180910390fd5b6111a583836121d7565b6001905092915050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6112006117f8565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006113d782600760008681526020019081526020016000206000016121e590919063ffffffff16565b905092915050565b600061140982600760008681526020019081526020016000206000016121ff90919063ffffffff16565b905092915050565b606060018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114a95780601f1061147e576101008083540402835291602001916114a9565b820191906000526020600020905b81548152906001019060200180831161148c57829003601f168201915b5050505050905090565b6000801b81565b600061157d6114c76117f8565b846115788560405180606001604052806025815260200161283b60259139600460006114f16117f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d9e9092919063ffffffff16565b611800565b6001905092915050565b60006115956000848461222f565b6115a76115a06117f8565b8484611ad9565b6001905092915050565b60006115d16007600084815260200190815260200160002060000161229d565b9050919050565b60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b61163860076000848152602001908152602001600020600201546116336117f8565b6113df565b61168d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061276a6030913960400191505060405180910390fd5b6116978282611ef2565b5050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61172a6117f8565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6117f5816122b2565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611886576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806128176024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561190c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806127226022913960400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b611a028383836123f8565b611a0d8383836123f8565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611ad457600954611a5f82611a51610b57565b611f8690919063ffffffff16565b1115611ad3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806127f26025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611be5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806126aa6023913960400191505060405180910390fd5b611bf08383836119f7565b611c5c8160405180606001604052806026815260200161274460269139600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d9e9092919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611cf181600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611e4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e10578082015181840152602081019050611df5565b50505050905090810190601f168015611e3d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b611e86816007600085815260200190815260200160002060000161241390919063ffffffff16565b15611eee57611e936117f8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b611f1a816007600085815260200190815260200160002060000161244390919063ffffffff16565b15611f8257611f276117f8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015612004576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6120bd600083836119f7565b6120d281600554611f8690919063ffffffff16565b60058190555061212a81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6121e18282611e5e565b5050565b60006121f48360000183612473565b60001c905092915050565b6000612227836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6124f6565b905092915050565b61223a838383612519565b612242611035565b15612298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061288f602a913960400191505060405180910390fd5b505050565b60006122ab8260000161251e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612338576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806126fc6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61240383838361222f565b61240e83838361222f565b505050565b600061243b836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61252f565b905092915050565b600061246b836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61259f565b905092915050565b6000818360000180549050116124d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806126886022913960400191505060405180910390fd5b8260000182815481106124e357fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b505050565b600081600001805490509050919050565b600061253b83836124f6565b612594578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612599565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461267b57600060018203905060006001866000018054905003905060008660000182815481106125ea57fe5b906000526020600020015490508087600001848154811061260757fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061263f57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612681565b60009150505b9291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220dad69ad4dc02fc4263c56296eb9337d1103524b279746c074d398bed48bb6b7564736f6c63430006000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636419bcdb11610104578063a217fddf116100a2578063d539139311610071578063d539139314610936578063d547741f14610954578063dd62ed3e146109a2578063f2fde38b14610a1a576101cf565b8063a217fddf1461080a578063a457c2d714610828578063a9059cbb1461088e578063ca15c873146108f4576101cf565b80638da5cb5b116100de5780638da5cb5b1461065f5780639010d07c146106a957806391d148541461072157806395d89b4114610787576101cf565b80636419bcdb1461059757806370a08231146105fd578063715018a614610655576101cf565b8063313ce56711610171578063395093511161014b578063395093511461049f57806340c10f19146105055780634bb278f31461056b5780635c975abb14610575576101cf565b8063313ce5671461040f578063355274ea1461043357806336568abe14610451576101cf565b806318160ddd116101ad57806318160ddd146102db57806323b872dd146102f9578063248a9ca31461037f5780632f2ff15d146103c1576101cf565b806306fdde03146101d4578063095ea7b3146102575780631339324b146102bd575b600080fd5b6101dc610a5e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561021c578082015181840152602081019050610201565b50505050905090810190601f1680156102495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102a36004803603604081101561026d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b00565b604051808215151515815260200191505060405180910390f35b6102c5610b1e565b6040518082815260200191505060405180910390f35b6102e3610b57565b6040518082815260200191505060405180910390f35b6103656004803603606081101561030f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b61565b604051808215151515815260200191505060405180910390f35b6103ab6004803603602081101561039557600080fd5b8101908080359060200190929190505050610bd2565b6040518082815260200191505060405180910390f35b61040d600480360360408110156103d757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bf2565b005b610417610c7c565b604051808260ff1660ff16815260200191505060405180910390f35b61043b610c93565b6040518082815260200191505060405180910390f35b61049d6004803603604081101561046757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c9d565b005b6104eb600480360360408110156104b557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d36565b604051808215151515815260200191505060405180910390f35b6105516004803603604081101561051b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610de9565b604051808215151515815260200191505060405180910390f35b610573610e9f565b005b61057d611035565b604051808215151515815260200191505060405180910390f35b6105e3600480360360408110156105ad57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061104c565b604051808215151515815260200191505060405180910390f35b61063f6004803603602081101561061357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111af565b6040518082815260200191505060405180910390f35b61065d6111f8565b005b610667611383565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106df600480360360408110156106bf57600080fd5b8101908080359060200190929190803590602001909291905050506113ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61076d6004803603604081101561073757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113df565b604051808215151515815260200191505060405180910390f35b61078f611411565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107cf5780820151818401526020810190506107b4565b50505050905090810190601f1680156107fc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108126114b3565b6040518082815260200191505060405180910390f35b6108746004803603604081101561083e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114ba565b604051808215151515815260200191505060405180910390f35b6108da600480360360408110156108a457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611587565b604051808215151515815260200191505060405180910390f35b6109206004803603602081101561090a57600080fd5b81019080803590602001909291905050506115b1565b6040518082815260200191505060405180910390f35b61093e6115d8565b6040518082815260200191505060405180910390f35b6109a06004803603604081101561096a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611611565b005b610a04600480360360408110156109b857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061169b565b6040518082815260200191505060405180910390f35b610a5c60048036036020811015610a3057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611722565b005b606060008054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610af65780601f10610acb57610100808354040283529160200191610af6565b820191906000526020600020905b815481529060010190602001808311610ad957829003601f168201915b5050505050905090565b6000610b14610b0d6117f8565b8484611800565b6001905092915050565b60405180807f4d494e5445525f41444d494e5f524f4c450000000000000000000000000000008152506011019050604051809103902081565b6000600554905090565b6000610b6e8484846119f7565b610b79848484611ad9565b610bc784610b856117f8565b610bc2856040518060600160405280602881526020016127ca60289139610bb38a610bae6117f8565b61169b565b611d9e9092919063ffffffff16565b611800565b600190509392505050565b600060076000838152602001908152602001600020600201549050919050565b610c196007600084815260200190815260200160002060020154610c146117f8565b6113df565b610c6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806126cd602f913960400191505060405180910390fd5b610c788282611e5e565b5050565b6000600260009054906101000a900460ff16905090565b6000600954905090565b610ca56117f8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180612860602f913960400191505060405180910390fd5b610d328282611ef2565b5050565b6000610ddf610d436117f8565b84610dda8560046000610d546117f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8690919063ffffffff16565b611800565b6001905092915050565b6000610e2a60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b0190506040518091039020336113df565b610e7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061279a6030913960400191505060405180910390fd5b610e8b600084846119f7565b610e95838361200e565b6001905092915050565b610ea76117f8565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600860149054906101000a900460ff1615610fec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4d696e746572526f6c653a20616c72656164792066696e616c697a656400000081525060200191505060405180910390fd5b6001600860146101000a81548160ff0219169083151502179055507f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a1565b6000600660009054906101000a900460ff16905090565b60006110566117f8565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611118576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600860149054906101000a900460ff161561119b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4d696e746572526f6c653a20616c72656164792066696e616c697a656400000081525060200191505060405180910390fd5b6111a583836121d7565b6001905092915050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6112006117f8565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006113d782600760008681526020019081526020016000206000016121e590919063ffffffff16565b905092915050565b600061140982600760008681526020019081526020016000206000016121ff90919063ffffffff16565b905092915050565b606060018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114a95780601f1061147e576101008083540402835291602001916114a9565b820191906000526020600020905b81548152906001019060200180831161148c57829003601f168201915b5050505050905090565b6000801b81565b600061157d6114c76117f8565b846115788560405180606001604052806025815260200161283b60259139600460006114f16117f8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d9e9092919063ffffffff16565b611800565b6001905092915050565b60006115956000848461222f565b6115a76115a06117f8565b8484611ad9565b6001905092915050565b60006115d16007600084815260200190815260200160002060000161229d565b9050919050565b60405180807f4d494e5445525f524f4c45000000000000000000000000000000000000000000815250600b019050604051809103902081565b61163860076000848152602001908152602001600020600201546116336117f8565b6113df565b61168d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061276a6030913960400191505060405180910390fd5b6116978282611ef2565b5050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61172a6117f8565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6117f5816122b2565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611886576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806128176024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561190c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806127226022913960400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b611a028383836123f8565b611a0d8383836123f8565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611ad457600954611a5f82611a51610b57565b611f8690919063ffffffff16565b1115611ad3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611b5f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806127f26025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611be5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806126aa6023913960400191505060405180910390fd5b611bf08383836119f7565b611c5c8160405180606001604052806026815260200161274460269139600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d9e9092919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611cf181600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611e4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e10578082015181840152602081019050611df5565b50505050905090810190601f168015611e3d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b611e86816007600085815260200190815260200160002060000161241390919063ffffffff16565b15611eee57611e936117f8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b611f1a816007600085815260200190815260200160002060000161244390919063ffffffff16565b15611f8257611f276117f8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015612004576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6120bd600083836119f7565b6120d281600554611f8690919063ffffffff16565b60058190555061212a81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f8690919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6121e18282611e5e565b5050565b60006121f48360000183612473565b60001c905092915050565b6000612227836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6124f6565b905092915050565b61223a838383612519565b612242611035565b15612298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061288f602a913960400191505060405180910390fd5b505050565b60006122ab8260000161251e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612338576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806126fc6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61240383838361222f565b61240e83838361222f565b505050565b600061243b836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61252f565b905092915050565b600061246b836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61259f565b905092915050565b6000818360000180549050116124d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806126886022913960400191505060405180910390fd5b8260000182815481106124e357fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b505050565b600081600001805490509050919050565b600061253b83836124f6565b612594578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612599565b600090505b92915050565b6000808360010160008481526020019081526020016000205490506000811461267b57600060018203905060006001866000018054905003905060008660000182815481106125ea57fe5b906000526020600020015490508087600001848154811061260757fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061263f57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050612681565b60009150505b9291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220dad69ad4dc02fc4263c56296eb9337d1103524b279746c074d398bed48bb6b7564736f6c63430006000033",
  "sourceMap": "86:2132:1:-:0;;;323:5:7;297:31;;;;;;;;;;;;;;;;;;;;350:99:1;8:9:-1;5:2;;;30:1;27;20:12;5:2;350:99:1;266:2;325:17;;319:2;:23;305:10;:38;393:4;;;;;;;;;;;;;;;;;399:6;;;;;;;;;;;;;;;;;266:2;521:4:11;513:5;:12;;;;;;;;;;;;:::i;:::-;;545:6;535:7;:16;;;;;;;;;;;;:::i;:::-;;573:8;561:9;;:20;;;;;;;;;;;;;;;;;;425:163;;;970:5:17;960:7;;:15;;;;;;;;;;;;;;;;;;832:17:9;852:12;:10;;;:12;;:::i;:::-;832:32;;883:9;874:6;;:18;;;;;;;;;;;;;;;;;;940:9;907:43;;936:1;907:43;;;;;;;;;;;;798:159;539:45:7;266:24;;;;;;;;;;;;;;;;;;;192:30;;;;;;;;;;;;;;;;;;;539:13;;;:45;;:::i;:::-;425:1:10;419:3;:7;411:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:3;462:4;:10;;;;368:111;86:2132:1;;736:104:3;789:15;823:10;816:17;;736:104;:::o;6257:124:5:-;6365:9;6340:6;:12;6347:4;6340:12;;;;;;;;;;;:22;;:34;;;;6257:124;;:::o;86:2132:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "86:2132:1:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;86:2132:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:81:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;653:81:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2545:166:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2545:166:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;148:74:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1552:98:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1816:400:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1816:400:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3764:112:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3764:112:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4126:223;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4126:223:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1481:81:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;558:73:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5300:205:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5300:205:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3881:215:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3881:215:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;697:210:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;697:210:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1010:169:7;;;:::i;:::-;;1077:76:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;739:216:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;739:216:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1708:117:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1708:117:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1656:145:9;;;:::i;:::-;;1033:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3447:136:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3447:136:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2432:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2432:137:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;847:85:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;847:85:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:49:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4583:266:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4583:266:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1110:248:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1110:248:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2737:125:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2737:125:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;228:62:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4583:226:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4583:226:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2258:149:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2258:149:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1950:115:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1950:115:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;653:81:11;690:13;722:5;715:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;653:81;:::o;2545:166:12:-;2628:4;2644:39;2653:12;:10;:12::i;:::-;2667:7;2676:6;2644:8;:39::i;:::-;2700:4;2693:11;;2545:166;;;;:::o;148:74:7:-;192:30;;;;;;;;;;;;;;;;;;;148:74;:::o;1552:98:12:-;1605:7;1631:12;;1624:19;;1552:98;:::o;1816:400:1:-;1937:4;1953:59;1986:6;1994:9;2005:6;1953:32;:59::i;:::-;2023:36;2033:6;2041:9;2052:6;2023:9;:36::i;:::-;2069:119;2078:6;2086:12;:10;:12::i;:::-;2100:87;2136:6;2100:87;;;;;;;;;;;;;;;;;:31;2110:6;2118:12;:10;:12::i;:::-;2100:9;:31::i;:::-;:35;;:87;;;;;:::i;:::-;2069:8;:119::i;:::-;2205:4;2198:11;;1816:400;;;;;:::o;3764:112:5:-;3821:7;3847:6;:12;3854:4;3847:12;;;;;;;;;;;:22;;;3840:29;;3764:112;;;:::o;4126:223::-;4209:45;4217:6;:12;4224:4;4217:12;;;;;;;;;;;:22;;;4241:12;:10;:12::i;:::-;4209:7;:45::i;:::-;4201:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4317:25;4328:4;4334:7;4317:10;:25::i;:::-;4126:223;;:::o;1481:81:11:-;1522:5;1546:9;;;;;;;;;;;1539:16;;1481:81;:::o;558:73:10:-;594:7;620:4;;613:11;;558:73;:::o;5300:205:5:-;5397:12;:10;:12::i;:::-;5386:23;;:7;:23;;;5378:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5472:26;5484:4;5490:7;5472:11;:26::i;:::-;5300:205;;:::o;3881:215:12:-;3969:4;3985:83;3994:12;:10;:12::i;:::-;4008:7;4017:50;4056:10;4017:11;:25;4029:12;:10;:12::i;:::-;4017:25;;;;;;;;;;;;;;;:34;4043:7;4017:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3985:8;:83::i;:::-;4085:4;4078:11;;3881:215;;;;:::o;697:210:1:-;774:4;398:32:7;266:24;;;;;;;;;;;;;;;;;;;419:10;398:7;:32::i;:::-;390:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:56:1::1;831:1;835:2;839:6;790:32;:56::i;:::-;856:23;868:2;872:6;856:11;:23::i;:::-;896:4;889:11;;697:210:::0;;;;:::o;1010:169:7:-;1247:12:9;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:10:7::1;;;;;;;;;;;1073:11;1065:53;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1142:4;1129:10;;:17;;;;;;;;;;;;;;;;;;1161:11;;;;;;;;;;1010:169::o:0;1077:76:17:-;1116:4;1139:7;;;;;;;;;;;1132:14;;1077:76;:::o;739:216:7:-;822:4;1247:12:9;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;847:10:7::1;;;;;;;;;;;846:11;838:53;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;902:25;913:4;919:7;902:10;:25::i;:::-;944:4;937:11;;739:216:::0;;;;:::o;1708:117:12:-;1774:7;1800:9;:18;1810:7;1800:18;;;;;;;;;;;;;;;;1793:25;;1708:117;;;:::o;1656:145:9:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1762:1:::1;1725:40;;1746:6;;;;;;;;;;;1725:40;;;;;;;;;;;;1792:1;1775:6;;:19;;;;;;;;;;;;;;;;;;1656:145::o:0;1033:77::-;1071:7;1097:6;;;;;;;;;;;1090:13;;1033:77;:::o;3447:136:5:-;3520:7;3546:30;3570:5;3546:6;:12;3553:4;3546:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;3539:37;;3447:136;;;;:::o;2432:137::-;2501:4;2524:38;2554:7;2524:6;:12;2531:4;2524:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;2517:45;;2432:137;;;;:::o;847:85:11:-;886:13;918:7;911:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;847:85;:::o;1622:49:5:-;1667:4;1622:49;;;:::o;4583:266:12:-;4676:4;4692:129;4701:12;:10;:12::i;:::-;4715:7;4724:96;4763:15;4724:96;;;;;;;;;;;;;;;;;:11;:25;4736:12;:10;:12::i;:::-;4724:25;;;;;;;;;;;;;;;:34;4750:7;4724:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4692:8;:129::i;:::-;4838:4;4831:11;;4583:266;;;;:::o;1110:248:1:-;1204:4;1220:58;1263:1;1267:2;1271:6;1220:34;:58::i;:::-;1289:41;1305:12;:10;:12::i;:::-;1319:2;1323:6;1289:15;:41::i;:::-;1347:4;1340:11;;1110:248;;;;:::o;2737:125:5:-;2800:7;2826:29;:6;:12;2833:4;2826:12;;;;;;;;;;;:20;;:27;:29::i;:::-;2819:36;;2737:125;;;:::o;228:62:7:-;266:24;;;;;;;;;;;;;;;;;;;228:62;:::o;4583:226:5:-;4667:45;4675:6;:12;4682:4;4675:12;;;;;;;;;;;:22;;;4699:12;:10;:12::i;:::-;4667:7;:45::i;:::-;4659:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4776:26;4788:4;4794:7;4776:11;:26::i;:::-;4583:226;;:::o;2258:149:12:-;2347:7;2373:11;:18;2385:5;2373:18;;;;;;;;;;;;;;;:27;2392:7;2373:27;;;;;;;;;;;;;;;;2366:34;;2258:149;;;;:::o;1950:115:9:-;1247:12;:10;:12::i;:::-;1237:22;;:6;;;;;;;;;;;:22;;;1229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2030:28:::1;2049:8;2030:18;:28::i;:::-;1950:115:::0;:::o;736:104:3:-;789:15;823:10;816:17;;736:104;:::o;7647:340:12:-;7765:1;7748:19;;:5;:19;;;;7740:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7845:1;7826:21;;:7;:21;;;;7818:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7927:6;7897:11;:18;7909:5;7897:18;;;;;;;;;;;;;;;:27;7916:7;7897:27;;;;;;;;;;;;;;;:36;;;;7964:7;7948:32;;7957:5;7948:32;;;7973:6;7948:32;;;;;;;;;;;;;;;;;;7647:340;;;:::o;810:396:10:-;940:44;967:4;973:2;977:6;940:26;:44::i;:::-;994:52;1029:4;1035:2;1039:6;994:34;:52::i;:::-;1077:1;1061:18;;:4;:18;;;1057:143;;;1155:4;;1126:25;1144:6;1126:13;:11;:13::i;:::-;:17;;:25;;;;:::i;:::-;:33;;1118:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:143;810:396;;;:::o;5323:530:12:-;5446:1;5428:20;;:6;:20;;;;5420:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5529:1;5508:23;;:9;:23;;;;5500:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5582:47;5603:6;5611:9;5622:6;5582:20;:47::i;:::-;5660:71;5682:6;5660:71;;;;;;;;;;;;;;;;;:9;:17;5670:6;5660:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5640:9;:17;5650:6;5640:17;;;;;;;;;;;;;;;:91;;;;5764:32;5789:6;5764:9;:20;5774:9;5764:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5741:9;:20;5751:9;5741:20;;;;;;;;;;;;;;;:55;;;;5828:9;5811:35;;5820:6;5811:35;;;5839:6;5811:35;;;;;;;;;;;;;;;;;;5323:530;;;:::o;1692:187:8:-;1778:7;1810:1;1805;:6;;1813:12;1797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1797:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:9;1852:1;1848;:5;1836:17;;1871:1;1864:8;;;1692:187;;;;;:::o;6387:184:5:-;6460:33;6485:7;6460:6;:12;6467:4;6460:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;6456:109;;;6541:12;:10;:12::i;:::-;6514:40;;6532:7;6514:40;;6526:4;6514:40;;;;;;;;;;6456:109;6387:184;;:::o;6577:188::-;6651:36;6679:7;6651:6;:12;6658:4;6651:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;6647:112;;;6735:12;:10;:12::i;:::-;6708:40;;6726:7;6708:40;;6720:4;6708:40;;;;;;;;;;6647:112;6577:188;;:::o;834:176:8:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;6123:370:12:-;6225:1;6206:21;;:7;:21;;;;6198:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6274:49;6303:1;6307:7;6316:6;6274:20;:49::i;:::-;6349:24;6366:6;6349:12;;:16;;:24;;;;:::i;:::-;6334:12;:39;;;;6404:30;6427:6;6404:9;:18;6414:7;6404:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6383:9;:18;6393:7;6383:18;;;;;;;;;;;;;;;:51;;;;6470:7;6449:37;;6466:1;6449:37;;;6479:6;6449:37;;;;;;;;;;;;;;;;;;6123:370;;:::o;6070:110:5:-;6148:25;6159:4;6165:7;6148:10;:25::i;:::-;6070:110;;:::o;6052:147:16:-;6126:7;6168:22;6172:3;:10;;6184:5;6168:3;:22::i;:::-;6160:31;;6145:47;;6052:147;;;;:::o;5368:156::-;5448:4;5471:46;5481:3;:10;;5509:5;5501:14;;5493:23;;5471:9;:46::i;:::-;5464:53;;5368:156;;;;:::o;544:234:14:-;652:44;679:4;685:2;689:6;652:26;:44::i;:::-;716:8;:6;:8::i;:::-;715:9;707:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:234;;;:::o;5605:115:16:-;5668:7;5694:19;5702:3;:10;;5694:7;:19::i;:::-;5687:26;;5605:115;;;:::o;2166:233:9:-;2267:1;2247:22;;:8;:22;;;;2239:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:8;2327:38;;2348:6;;;;;;;;;;;2327:38;;;;;;;;;;;;2384:8;2375:6;;:17;;;;;;;;;;;;;;;;;;2166:233;:::o;307:243:13:-;437:44;464:4;470:2;474:6;437:26;:44::i;:::-;491:52;526:4;532:2;536:6;491:34;:52::i;:::-;307:243;;;:::o;4831:141:16:-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;:41::i;:::-;4917:48;;4831:141;;;;:::o;5140:147::-;5213:4;5236:44;5244:3;:10;;5272:5;5264:14;;5256:23;;5236:7;:44::i;:::-;5229:51;;5140:147;;;;:::o;4390:201::-;4457:7;4505:5;4484:3;:11;;:18;;;;:26;4476:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;3743:127::-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;8550:92:12:-;;;;:::o;3951:107:16:-;4007:7;4033:3;:11;;:18;;;;4026:25;;3951:107;;;:::o;1578:404::-;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:16;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;2150:1512::-;2216:4;2332:18;2353:3;:12;;:19;2366:5;2353:19;;;;;;;;;;;;2332:40;;2401:1;2387:10;:15;2383:1273;;2744:21;2781:1;2768:10;:14;2744:38;;2796:17;2837:1;2816:3;:11;;:18;;;;:22;2796:42;;3078:17;3098:3;:11;;3110:9;3098:22;;;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;:38;;;;3358:1;3342:13;:17;3316:3;:12;;:23;3329:9;3316:23;;;;;;;;;;;:43;;;;3465:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;2150:1512;;;;;:::o",
  "source": "pragma solidity ^0.6.0;\n\nimport \"./token/Detailed.sol\";\nimport \"./token/Capped.sol\";\n\ncontract DTV is ERC20Detailed, ERC20Capped {\n\n    string constant private NAME = \"DelnorteToken\";\n    string constant private SYMBOL = \"DTV\";\n    uint8 constant private DECIMALS = 18;\n    uint256 constant private CAP = 1000000000 * (10 ** uint256(DECIMALS));\n\n    constructor() public\n        ERC20Detailed(NAME, SYMBOL, DECIMALS)\n        ERC20Capped(CAP) {\n    }\n\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param amount The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 amount) public virtual onlyMinter returns (bool) {\n        ERC20Capped._beforeTokenTransfer(address(0), to, amount);\n        ERC20._mint(to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override(ERC20, IERC20) returns (bool) {\n        ERC20Pausable._beforeTokenTransfer(address(0), to, amount);\n\n        ERC20._transfer(_msgSender(), to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override(ERC20, IERC20) returns (bool) {\n        ERC20Capped._beforeTokenTransfer(sender, recipient, amount);\n\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), allowance(sender, _msgSender()).sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n}\n",
  "sourcePath": "/Applications/projects/nft/newdt/contracts/DTV.sol",
  "ast": {
    "absolutePath": "project:/contracts/DTV.sol",
    "exportedSymbols": {
      "DTV": [
        394
      ]
    },
    "id": 395,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 242,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "project:/contracts/token/Detailed.sol",
        "file": "./token/Detailed.sol",
        "id": 243,
        "nodeType": "ImportDirective",
        "scope": 395,
        "sourceUnit": 2613,
        "src": "25:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/token/Capped.sol",
        "file": "./token/Capped.sol",
        "id": 244,
        "nodeType": "ImportDirective",
        "scope": 395,
        "sourceUnit": 2555,
        "src": "56:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 245,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2612,
              "src": "102:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2612",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 246,
            "nodeType": "InheritanceSpecifier",
            "src": "102:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 247,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2554,
              "src": "117:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$2554",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 248,
            "nodeType": "InheritanceSpecifier",
            "src": "117:11:1"
          }
        ],
        "contractDependencies": [
          1704,
          1990,
          2170,
          2470,
          2554,
          2612,
          3036,
          3077,
          3112,
          3181,
          3641
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 394,
        "linearizedBaseContracts": [
          394,
          2554,
          3077,
          2170,
          2470,
          1990,
          3112,
          3641,
          3036,
          2612,
          3181,
          1704
        ],
        "name": "DTV",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 251,
            "name": "NAME",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 394,
            "src": "136:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 249,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "136:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "44656c6e6f727465546f6b656e",
              "id": 250,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "167:15:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_54252dddad89c413f747042d8ffb9dade513a6e740a0f3152c950756c80592f6",
                "typeString": "literal_string \"DelnorteToken\""
              },
              "value": "DelnorteToken"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 254,
            "name": "SYMBOL",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 394,
            "src": "188:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 252,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "188:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "445456",
              "id": 253,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "221:5:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0f8b9ce468bb27e54540f35dff3ffb74078feafb522c2696281d3d9bf85baedc",
                "typeString": "literal_string \"DTV\""
              },
              "value": "DTV"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 257,
            "name": "DECIMALS",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 394,
            "src": "232:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 255,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "232:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 256,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "266:2:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 268,
            "name": "CAP",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 394,
            "src": "274:69:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 258,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "274:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 267,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31303030303030303030",
                "id": 259,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "305:10:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000_by_1",
                  "typeString": "int_const 1000000000"
                },
                "value": "1000000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "319:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 263,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 257,
                          "src": "333:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "325:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "325:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "325:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "319:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 266,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "318:25:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "305:38:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "442:7:1",
              "statements": []
            },
            "documentation": null,
            "id": 280,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 271,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 251,
                    "src": "393:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 272,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 254,
                    "src": "399:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 273,
                    "name": "DECIMALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 257,
                    "src": "407:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 274,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 270,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2612,
                  "src": "379:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2612_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "379:37:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 276,
                    "name": "CAP",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 268,
                    "src": "437:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 277,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 275,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2554,
                  "src": "425:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$2554_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "425:16:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:2:1"
            },
            "returnParameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:0:1"
            },
            "scope": 394,
            "src": "350:99:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "780:127:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "831:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "823:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 294,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "823:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "823:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 298,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "835:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 299,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "839:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 291,
                        "name": "ERC20Capped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2554,
                        "src": "790:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$2554_$",
                          "typeString": "type(contract ERC20Capped)"
                        }
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2553,
                      "src": "790:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "790:56:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 305,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "868:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 306,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "872:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 302,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3036,
                        "src": "856:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3036_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2926,
                      "src": "856:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "856:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "856:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "896:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 290,
                  "id": 310,
                  "nodeType": "Return",
                  "src": "889:11:1"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param amount The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "functionSelector": "40c10f19",
            "id": 312,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 287,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 286,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2116,
                  "src": "754:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "754:10:1"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "711:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 284,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "723:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "710:28:1"
            },
            "returnParameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 289,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "774:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "773:6:1"
            },
            "scope": 394,
            "src": "697:210:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2678,
              3135
            ],
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "1210:148:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1263:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1255:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 327,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1255:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1255:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 331,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "1267:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 332,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "1271:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 324,
                        "name": "ERC20Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3112,
                        "src": "1220:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Pausable_$3112_$",
                          "typeString": "type(contract ERC20Pausable)"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3111,
                      "src": "1220:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:58:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 338,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1692,
                          "src": "1305:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1305:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 340,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "1319:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 341,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 316,
                        "src": "1323:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 335,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3036,
                        "src": "1289:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3036_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2872,
                      "src": "1289:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1347:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 323,
                  "id": 345,
                  "nodeType": "Return",
                  "src": "1340:11:1"
                }
              ]
            },
            "documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
            "functionSelector": "a9059cbb",
            "id": 347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 320,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 318,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3036,
                  "src": "1180:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3036",
                    "typeString": "contract ERC20"
                  }
                },
                {
                  "contractScope": null,
                  "id": 319,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3181,
                  "src": "1187:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3181",
                    "typeString": "contract IERC20"
                  }
                }
              ],
              "src": "1171:23:1"
            },
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 314,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 347,
                  "src": "1128:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 316,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 347,
                  "src": "1140:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1127:28:1"
            },
            "returnParameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 347,
                  "src": "1204:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:6:1"
            },
            "scope": 394,
            "src": "1110:248:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2752,
              3164
            ],
            "body": {
              "id": 392,
              "nodeType": "Block",
              "src": "1943:273:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 364,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "1986:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 365,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "1994:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 366,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "2005:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 361,
                        "name": "ERC20Capped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2554,
                        "src": "1953:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$2554_$",
                          "typeString": "type(contract ERC20Capped)"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2553,
                      "src": "1953:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1953:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "1953:59:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 370,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "2033:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 371,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "2041:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 372,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "2052:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 369,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2872,
                      "src": "2023:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2023:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "2023:36:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 376,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 349,
                        "src": "2078:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 377,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1692,
                          "src": "2086:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2086:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 385,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "2136:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2144:42:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            },
                            "value": "ERC20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 380,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 349,
                                "src": "2110:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 381,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1692,
                                  "src": "2118:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2118:12:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 379,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2695,
                              "src": "2100:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view returns (uint256)"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2100:31:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2240,
                          "src": "2100:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2100:87:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 375,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3025,
                      "src": "2069:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2069:119:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "2069:119:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2205:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 360,
                  "id": 391,
                  "nodeType": "Return",
                  "src": "2198:11:1"
                }
              ]
            },
            "documentation": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
            "functionSelector": "23b872dd",
            "id": 393,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 357,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 355,
                  "name": "ERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3036,
                  "src": "1913:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3036",
                    "typeString": "contract ERC20"
                  }
                },
                {
                  "contractScope": null,
                  "id": 356,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3181,
                  "src": "1920:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3181",
                    "typeString": "contract IERC20"
                  }
                }
              ],
              "src": "1904:23:1"
            },
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 349,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 393,
                  "src": "1838:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1838:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 351,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 393,
                  "src": "1854:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 393,
                  "src": "1873:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1837:51:1"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 359,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 393,
                  "src": "1937:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1937:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1936:6:1"
            },
            "scope": 394,
            "src": "1816:400:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 395,
        "src": "86:2132:1"
      }
    ],
    "src": "0:2219:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/DTV.sol",
      "exportedSymbols": {
        "DTV": [
          394
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".0"
          ]
        },
        "id": 242,
        "name": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "attributes": {
          "SourceUnit": 2613,
          "absolutePath": "project:/contracts/token/Detailed.sol",
          "file": "./token/Detailed.sol",
          "scope": 395,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 243,
        "name": "ImportDirective",
        "src": "25:30:1"
      },
      {
        "attributes": {
          "SourceUnit": 2555,
          "absolutePath": "project:/contracts/token/Capped.sol",
          "file": "./token/Capped.sol",
          "scope": 395,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 244,
        "name": "ImportDirective",
        "src": "56:28:1"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1704,
            1990,
            2170,
            2470,
            2554,
            2612,
            3036,
            3077,
            3112,
            3181,
            3641
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            394,
            2554,
            3077,
            2170,
            2470,
            1990,
            3112,
            3641,
            3036,
            2612,
            3181,
            1704
          ],
          "name": "DTV",
          "scope": 395
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Detailed",
                  "referencedDeclaration": 2612,
                  "type": "contract ERC20Detailed"
                },
                "id": 245,
                "name": "UserDefinedTypeName",
                "src": "102:13:1"
              }
            ],
            "id": 246,
            "name": "InheritanceSpecifier",
            "src": "102:13:1"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Capped",
                  "referencedDeclaration": 2554,
                  "type": "contract ERC20Capped"
                },
                "id": 247,
                "name": "UserDefinedTypeName",
                "src": "117:11:1"
              }
            ],
            "id": 248,
            "name": "InheritanceSpecifier",
            "src": "117:11:1"
          },
          {
            "attributes": {
              "constant": true,
              "name": "NAME",
              "overrides": null,
              "scope": 394,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 249,
                "name": "ElementaryTypeName",
                "src": "136:6:1"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "44656c6e6f727465546f6b656e",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"DelnorteToken\"",
                  "value": "DelnorteToken"
                },
                "id": 250,
                "name": "Literal",
                "src": "167:15:1"
              }
            ],
            "id": 251,
            "name": "VariableDeclaration",
            "src": "136:46:1"
          },
          {
            "attributes": {
              "constant": true,
              "name": "SYMBOL",
              "overrides": null,
              "scope": 394,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 252,
                "name": "ElementaryTypeName",
                "src": "188:6:1"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "445456",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "string",
                  "type": "literal_string \"DTV\"",
                  "value": "DTV"
                },
                "id": 253,
                "name": "Literal",
                "src": "221:5:1"
              }
            ],
            "id": 254,
            "name": "VariableDeclaration",
            "src": "188:38:1"
          },
          {
            "attributes": {
              "constant": true,
              "name": "DECIMALS",
              "overrides": null,
              "scope": 394,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint8",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint8",
                  "type": "uint8"
                },
                "id": 255,
                "name": "ElementaryTypeName",
                "src": "232:5:1"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "3138",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 18",
                  "value": "18"
                },
                "id": 256,
                "name": "Literal",
                "src": "266:2:1"
              }
            ],
            "id": 257,
            "name": "VariableDeclaration",
            "src": "232:36:1"
          },
          {
            "attributes": {
              "constant": true,
              "name": "CAP",
              "overrides": null,
              "scope": 394,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 258,
                "name": "ElementaryTypeName",
                "src": "274:7:1"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "operator": "*",
                  "type": "uint256"
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "31303030303030303030",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 1000000000",
                      "value": "1000000000"
                    },
                    "id": 259,
                    "name": "Literal",
                    "src": "305:10:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "type": "uint256"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "operator": "**",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "3130",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 10",
                              "value": "10"
                            },
                            "id": 260,
                            "name": "Literal",
                            "src": "319:2:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint256",
                                      "type": null
                                    },
                                    "id": 261,
                                    "name": "ElementaryTypeName",
                                    "src": "325:7:1"
                                  }
                                ],
                                "id": 262,
                                "name": "ElementaryTypeNameExpression",
                                "src": "325:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 257,
                                  "type": "uint8",
                                  "value": "DECIMALS"
                                },
                                "id": 263,
                                "name": "Identifier",
                                "src": "333:8:1"
                              }
                            ],
                            "id": 264,
                            "name": "FunctionCall",
                            "src": "325:17:1"
                          }
                        ],
                        "id": 265,
                        "name": "BinaryOperation",
                        "src": "319:23:1"
                      }
                    ],
                    "id": 266,
                    "name": "TupleExpression",
                    "src": "318:25:1"
                  }
                ],
                "id": 267,
                "name": "BinaryOperation",
                "src": "305:38:1"
              }
            ],
            "id": 268,
            "name": "VariableDeclaration",
            "src": "274:69:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 394,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 269,
                "name": "ParameterList",
                "src": "361:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 278,
                "name": "ParameterList",
                "src": "442:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2612,
                      "type": "type(contract ERC20Detailed)",
                      "value": "ERC20Detailed"
                    },
                    "id": 270,
                    "name": "Identifier",
                    "src": "379:13:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 251,
                      "type": "string memory",
                      "value": "NAME"
                    },
                    "id": 271,
                    "name": "Identifier",
                    "src": "393:4:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 254,
                      "type": "string memory",
                      "value": "SYMBOL"
                    },
                    "id": 272,
                    "name": "Identifier",
                    "src": "399:6:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 257,
                      "type": "uint8",
                      "value": "DECIMALS"
                    },
                    "id": 273,
                    "name": "Identifier",
                    "src": "407:8:1"
                  }
                ],
                "id": 274,
                "name": "ModifierInvocation",
                "src": "379:37:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2554,
                      "type": "type(contract ERC20Capped)",
                      "value": "ERC20Capped"
                    },
                    "id": 275,
                    "name": "Identifier",
                    "src": "425:11:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 268,
                      "type": "uint256",
                      "value": "CAP"
                    },
                    "id": 276,
                    "name": "Identifier",
                    "src": "437:3:1"
                  }
                ],
                "id": 277,
                "name": "ModifierInvocation",
                "src": "425:16:1"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 279,
                "name": "Block",
                "src": "442:7:1"
              }
            ],
            "id": 280,
            "name": "FunctionDefinition",
            "src": "350:99:1"
          },
          {
            "attributes": {
              "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param amount The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
              "functionSelector": "40c10f19",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "overrides": null,
              "scope": 394,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "overrides": null,
                      "scope": 312,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 281,
                        "name": "ElementaryTypeName",
                        "src": "711:7:1"
                      }
                    ],
                    "id": 282,
                    "name": "VariableDeclaration",
                    "src": "711:10:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "overrides": null,
                      "scope": 312,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 283,
                        "name": "ElementaryTypeName",
                        "src": "723:7:1"
                      }
                    ],
                    "id": 284,
                    "name": "VariableDeclaration",
                    "src": "723:14:1"
                  }
                ],
                "id": 285,
                "name": "ParameterList",
                "src": "710:28:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 312,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 288,
                        "name": "ElementaryTypeName",
                        "src": "774:4:1"
                      }
                    ],
                    "id": 289,
                    "name": "VariableDeclaration",
                    "src": "774:4:1"
                  }
                ],
                "id": 290,
                "name": "ParameterList",
                "src": "773:6:1"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2116,
                      "type": "modifier ()",
                      "value": "onlyMinter"
                    },
                    "id": 286,
                    "name": "Identifier",
                    "src": "754:10:1"
                  }
                ],
                "id": 287,
                "name": "ModifierInvocation",
                "src": "754:10:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_beforeTokenTransfer",
                              "referencedDeclaration": 2553,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2554,
                                  "type": "type(contract ERC20Capped)",
                                  "value": "ERC20Capped"
                                },
                                "id": 291,
                                "name": "Identifier",
                                "src": "790:11:1"
                              }
                            ],
                            "id": 293,
                            "name": "MemberAccess",
                            "src": "790:32:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 294,
                                    "name": "ElementaryTypeName",
                                    "src": "823:7:1"
                                  }
                                ],
                                "id": 295,
                                "name": "ElementaryTypeNameExpression",
                                "src": "823:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 296,
                                "name": "Literal",
                                "src": "831:1:1"
                              }
                            ],
                            "id": 297,
                            "name": "FunctionCall",
                            "src": "823:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 282,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 298,
                            "name": "Identifier",
                            "src": "835:2:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 284,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 299,
                            "name": "Identifier",
                            "src": "839:6:1"
                          }
                        ],
                        "id": 300,
                        "name": "FunctionCall",
                        "src": "790:56:1"
                      }
                    ],
                    "id": 301,
                    "name": "ExpressionStatement",
                    "src": "790:56:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_mint",
                              "referencedDeclaration": 2926,
                              "type": "function (address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3036,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 302,
                                "name": "Identifier",
                                "src": "856:5:1"
                              }
                            ],
                            "id": 304,
                            "name": "MemberAccess",
                            "src": "856:11:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 282,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 305,
                            "name": "Identifier",
                            "src": "868:2:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 284,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 306,
                            "name": "Identifier",
                            "src": "872:6:1"
                          }
                        ],
                        "id": 307,
                        "name": "FunctionCall",
                        "src": "856:23:1"
                      }
                    ],
                    "id": 308,
                    "name": "ExpressionStatement",
                    "src": "856:23:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 290
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 309,
                        "name": "Literal",
                        "src": "896:4:1"
                      }
                    ],
                    "id": 310,
                    "name": "Return",
                    "src": "889:11:1"
                  }
                ],
                "id": 311,
                "name": "Block",
                "src": "780:127:1"
              }
            ],
            "id": 312,
            "name": "FunctionDefinition",
            "src": "697:210:1"
          },
          {
            "attributes": {
              "baseFunctions": [
                2678,
                3135
              ],
              "documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
              "functionSelector": "a9059cbb",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "transfer",
              "scope": 394,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20",
                      "referencedDeclaration": 3036,
                      "type": "contract ERC20"
                    },
                    "id": 318,
                    "name": "UserDefinedTypeName",
                    "src": "1180:5:1"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "IERC20",
                      "referencedDeclaration": 3181,
                      "type": "contract IERC20"
                    },
                    "id": 319,
                    "name": "UserDefinedTypeName",
                    "src": "1187:6:1"
                  }
                ],
                "id": 320,
                "name": "OverrideSpecifier",
                "src": "1171:23:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "overrides": null,
                      "scope": 347,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 313,
                        "name": "ElementaryTypeName",
                        "src": "1128:7:1"
                      }
                    ],
                    "id": 314,
                    "name": "VariableDeclaration",
                    "src": "1128:10:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "overrides": null,
                      "scope": 347,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 315,
                        "name": "ElementaryTypeName",
                        "src": "1140:7:1"
                      }
                    ],
                    "id": 316,
                    "name": "VariableDeclaration",
                    "src": "1140:14:1"
                  }
                ],
                "id": 317,
                "name": "ParameterList",
                "src": "1127:28:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 347,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 321,
                        "name": "ElementaryTypeName",
                        "src": "1204:4:1"
                      }
                    ],
                    "id": 322,
                    "name": "VariableDeclaration",
                    "src": "1204:4:1"
                  }
                ],
                "id": 323,
                "name": "ParameterList",
                "src": "1203:6:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_beforeTokenTransfer",
                              "referencedDeclaration": 3111,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3112,
                                  "type": "type(contract ERC20Pausable)",
                                  "value": "ERC20Pausable"
                                },
                                "id": 324,
                                "name": "Identifier",
                                "src": "1220:13:1"
                              }
                            ],
                            "id": 326,
                            "name": "MemberAccess",
                            "src": "1220:34:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 327,
                                    "name": "ElementaryTypeName",
                                    "src": "1255:7:1"
                                  }
                                ],
                                "id": 328,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1255:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 329,
                                "name": "Literal",
                                "src": "1263:1:1"
                              }
                            ],
                            "id": 330,
                            "name": "FunctionCall",
                            "src": "1255:10:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 314,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 331,
                            "name": "Identifier",
                            "src": "1267:2:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 316,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 332,
                            "name": "Identifier",
                            "src": "1271:6:1"
                          }
                        ],
                        "id": 333,
                        "name": "FunctionCall",
                        "src": "1220:58:1"
                      }
                    ],
                    "id": 334,
                    "name": "ExpressionStatement",
                    "src": "1220:58:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_transfer",
                              "referencedDeclaration": 2872,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3036,
                                  "type": "type(contract ERC20)",
                                  "value": "ERC20"
                                },
                                "id": 335,
                                "name": "Identifier",
                                "src": "1289:5:1"
                              }
                            ],
                            "id": 337,
                            "name": "MemberAccess",
                            "src": "1289:15:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1692,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 338,
                                "name": "Identifier",
                                "src": "1305:10:1"
                              }
                            ],
                            "id": 339,
                            "name": "FunctionCall",
                            "src": "1305:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 314,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 340,
                            "name": "Identifier",
                            "src": "1319:2:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 316,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 341,
                            "name": "Identifier",
                            "src": "1323:6:1"
                          }
                        ],
                        "id": 342,
                        "name": "FunctionCall",
                        "src": "1289:41:1"
                      }
                    ],
                    "id": 343,
                    "name": "ExpressionStatement",
                    "src": "1289:41:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 323
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 344,
                        "name": "Literal",
                        "src": "1347:4:1"
                      }
                    ],
                    "id": 345,
                    "name": "Return",
                    "src": "1340:11:1"
                  }
                ],
                "id": 346,
                "name": "Block",
                "src": "1210:148:1"
              }
            ],
            "id": 347,
            "name": "FunctionDefinition",
            "src": "1110:248:1"
          },
          {
            "attributes": {
              "baseFunctions": [
                2752,
                3164
              ],
              "documentation": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
              "functionSelector": "23b872dd",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "transferFrom",
              "scope": 394,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20",
                      "referencedDeclaration": 3036,
                      "type": "contract ERC20"
                    },
                    "id": 355,
                    "name": "UserDefinedTypeName",
                    "src": "1913:5:1"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "IERC20",
                      "referencedDeclaration": 3181,
                      "type": "contract IERC20"
                    },
                    "id": 356,
                    "name": "UserDefinedTypeName",
                    "src": "1920:6:1"
                  }
                ],
                "id": 357,
                "name": "OverrideSpecifier",
                "src": "1904:23:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "sender",
                      "overrides": null,
                      "scope": 393,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 348,
                        "name": "ElementaryTypeName",
                        "src": "1838:7:1"
                      }
                    ],
                    "id": 349,
                    "name": "VariableDeclaration",
                    "src": "1838:14:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "recipient",
                      "overrides": null,
                      "scope": 393,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 350,
                        "name": "ElementaryTypeName",
                        "src": "1854:7:1"
                      }
                    ],
                    "id": 351,
                    "name": "VariableDeclaration",
                    "src": "1854:17:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "amount",
                      "overrides": null,
                      "scope": 393,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 352,
                        "name": "ElementaryTypeName",
                        "src": "1873:7:1"
                      }
                    ],
                    "id": 353,
                    "name": "VariableDeclaration",
                    "src": "1873:14:1"
                  }
                ],
                "id": 354,
                "name": "ParameterList",
                "src": "1837:51:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "overrides": null,
                      "scope": 393,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 358,
                        "name": "ElementaryTypeName",
                        "src": "1937:4:1"
                      }
                    ],
                    "id": 359,
                    "name": "VariableDeclaration",
                    "src": "1937:4:1"
                  }
                ],
                "id": 360,
                "name": "ParameterList",
                "src": "1936:6:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_beforeTokenTransfer",
                              "referencedDeclaration": 2553,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2554,
                                  "type": "type(contract ERC20Capped)",
                                  "value": "ERC20Capped"
                                },
                                "id": 361,
                                "name": "Identifier",
                                "src": "1953:11:1"
                              }
                            ],
                            "id": 363,
                            "name": "MemberAccess",
                            "src": "1953:32:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 349,
                              "type": "address",
                              "value": "sender"
                            },
                            "id": 364,
                            "name": "Identifier",
                            "src": "1986:6:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 351,
                              "type": "address",
                              "value": "recipient"
                            },
                            "id": 365,
                            "name": "Identifier",
                            "src": "1994:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 353,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 366,
                            "name": "Identifier",
                            "src": "2005:6:1"
                          }
                        ],
                        "id": 367,
                        "name": "FunctionCall",
                        "src": "1953:59:1"
                      }
                    ],
                    "id": 368,
                    "name": "ExpressionStatement",
                    "src": "1953:59:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2872,
                              "type": "function (address,address,uint256)",
                              "value": "_transfer"
                            },
                            "id": 369,
                            "name": "Identifier",
                            "src": "2023:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 349,
                              "type": "address",
                              "value": "sender"
                            },
                            "id": 370,
                            "name": "Identifier",
                            "src": "2033:6:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 351,
                              "type": "address",
                              "value": "recipient"
                            },
                            "id": 371,
                            "name": "Identifier",
                            "src": "2041:9:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 353,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 372,
                            "name": "Identifier",
                            "src": "2052:6:1"
                          }
                        ],
                        "id": 373,
                        "name": "FunctionCall",
                        "src": "2023:36:1"
                      }
                    ],
                    "id": 374,
                    "name": "ExpressionStatement",
                    "src": "2023:36:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3025,
                              "type": "function (address,address,uint256)",
                              "value": "_approve"
                            },
                            "id": 375,
                            "name": "Identifier",
                            "src": "2069:8:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 349,
                              "type": "address",
                              "value": "sender"
                            },
                            "id": 376,
                            "name": "Identifier",
                            "src": "2078:6:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1692,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 377,
                                "name": "Identifier",
                                "src": "2086:10:1"
                              }
                            ],
                            "id": 378,
                            "name": "FunctionCall",
                            "src": "2086:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                                      "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sub",
                                  "referencedDeclaration": 2240,
                                  "type": "function (uint256,uint256,string memory) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "uint256",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2695,
                                          "type": "function (address,address) view returns (uint256)",
                                          "value": "allowance"
                                        },
                                        "id": 379,
                                        "name": "Identifier",
                                        "src": "2100:9:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 349,
                                          "type": "address",
                                          "value": "sender"
                                        },
                                        "id": 380,
                                        "name": "Identifier",
                                        "src": "2110:6:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            null
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "address payable",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                null
                                              ],
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 1692,
                                              "type": "function () view returns (address payable)",
                                              "value": "_msgSender"
                                            },
                                            "id": 381,
                                            "name": "Identifier",
                                            "src": "2118:10:1"
                                          }
                                        ],
                                        "id": 382,
                                        "name": "FunctionCall",
                                        "src": "2118:12:1"
                                      }
                                    ],
                                    "id": 383,
                                    "name": "FunctionCall",
                                    "src": "2100:31:1"
                                  }
                                ],
                                "id": 384,
                                "name": "MemberAccess",
                                "src": "2100:35:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 353,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 385,
                                "name": "Identifier",
                                "src": "2136:6:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "string",
                                  "type": "literal_string \"ERC20: transfer amount exceeds allowance\"",
                                  "value": "ERC20: transfer amount exceeds allowance"
                                },
                                "id": 386,
                                "name": "Literal",
                                "src": "2144:42:1"
                              }
                            ],
                            "id": 387,
                            "name": "FunctionCall",
                            "src": "2100:87:1"
                          }
                        ],
                        "id": 388,
                        "name": "FunctionCall",
                        "src": "2069:119:1"
                      }
                    ],
                    "id": 389,
                    "name": "ExpressionStatement",
                    "src": "2069:119:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 360
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 390,
                        "name": "Literal",
                        "src": "2205:4:1"
                      }
                    ],
                    "id": 391,
                    "name": "Return",
                    "src": "2198:11:1"
                  }
                ],
                "id": 392,
                "name": "Block",
                "src": "1943:273:1"
              }
            ],
            "id": 393,
            "name": "FunctionDefinition",
            "src": "1816:400:1"
          }
        ],
        "id": 394,
        "name": "ContractDefinition",
        "src": "86:2132:1"
      }
    ],
    "id": 395,
    "name": "SourceUnit",
    "src": "0:2219:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-20T16:30:35.074Z",
  "devdoc": {
    "methods": {
      "addAdmin(bytes32,address)": {
        "details": "Create and ading new role.",
        "params": {
          "account": "account for adding to the role.",
          "role": "role account."
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "finalize()": {
        "details": "block adding admins."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "amount": "The amount of tokens to mint.",
          "to": "The address that will receive the minted tokens."
        },
        "returns": {
          "_0": "A boolean that indicates if the operation was successful."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}